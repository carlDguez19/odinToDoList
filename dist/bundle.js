(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var c=o.length-1;c>-1&&!t;)t=o[c--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"abbfad808c2786a6a2d4.png",n=e.p+"986e98635b18601755cf.png",o=e.p+"177a54134d0bd5aefd06.png",c=e.p+"edb755c23d1ebcf9c7a4.png",i=e.p+"c9c7160b568bb10d504c.png",r=(f(".projAdd"),f(".projRemove"),document.querySelector(".newProjectOverlay"));var l=function(e){const t=e.target.matches(".projEdit"),n=e.target.matches(".projRemove"),o=(e.target.matches(".projAdd"),f(".projectNameMain"));if(t){console.log("editButton clicked"),c=o.textContent,r.style.animation="projectSlideDown 1.5s forwards",f("#title").value=c,s(o);for(let e=0;e<m.length;e++)console.log(e+1+" "+m[e].title)}else if(n){console.log("removeButton clicked"),function(e){const t=f(".sidebarProject"),n=t.children;for(let o=0;o<n.length;o++)n[o].textContent==e&&t.removeChild(n[o])}(o.textContent),function(e){for(let t=0;t<m.length;t++)m[t].title==e&&m.splice(t,1)}(o.textContent),p();for(let e=0;e<m.length;e++)console.log(e+1+" "+m[e].title)}var c};function s(e){let t=0;for(let n=0;n<m.length;n++)if(t=n,m[n].title==e)return m[n]}const d=f(".projectSection");function a(e){const t=f(".sidebarProject");let n=document.createElement("span");n.textContent=e,n.classList.add("projectNameSidebar"),t.appendChild(n)}function u(e){p();const t=document.createElement("div"),n=document.createElement("ul");n.classList.add("todoUL");const r=document.createElement("input");r.type="checkbox",r.classList.add("projectCheckbox");const s=document.createElement("span");if(e.title.length>30){let t=e.title.slice(0,31);s.textContent=t+"..."}else s.textContent=e.title;s.classList.add("projectNameMain");const a=document.createElement("div"),u=document.createElement("div"),m=document.createElement("div"),f=document.createElement("div"),g=new Image;g.src=c,g.classList.add("projAdd");const h=new Image;h.src=i,h.classList.add("projEdit");const j=new Image;j.src=o,j.classList.add("projRemove"),u.appendChild(g),m.appendChild(h),f.appendChild(j),a.appendChild(u),a.appendChild(m),a.appendChild(f),a.classList.add("projectOptions"),t.appendChild(r),t.appendChild(s),t.appendChild(a),t.classList.add("project"),d.appendChild(t),d.appendChild(n),document.addEventListener("click",l)}function p(){for(document.removeEventListener("click",l);d.firstChild;)d.removeChild(d.firstChild)}let m=[];function f(e){return document.querySelector(e)}class g{constructor(e,t){this.title=e,this.description=t,this.toDos=[]}get title(){return this._title}get description(){return this._description}get toDoList(){return this._toDos}set title(e){this._title=e}set description(e){this._description=e}}const h=document.querySelector(".newProjectOverlay");function j(){document.getElementById("title").value="",document.getElementById("description").value=""}!function(){const e=document.querySelector(".menuContainer"),i=document.querySelector(".mainLogo"),r=document.querySelector(".menuClose"),l=document.querySelector(".createProj"),d=new Image;d.src=t,d.classList.add("main-menu-logo");const a=new Image;a.src=n,a.classList.add("main-logo");const p=new Image;p.src=o,p.classList.add("menuClose");const m=new Image;m.src=c,m.classList.add("addProjButton"),e.appendChild(d),i.appendChild(a),r.appendChild(p),l.appendChild(m);const f=document.querySelector(".sidebar-menu"),g=document.querySelector(".newProjectOverlay");e.addEventListener("click",(function(){f.style.animation="menuSlideOn 1.5s forwards"})),r.addEventListener("click",(function(){f.style.animation="menuSlideClose 1.5s forwards"})),l.addEventListener("click",(function(){f.style.animation="menuSlideClose 1.5s forwards",g.style.animation="projectSlideDown 1.5s forwards"})),f.addEventListener("click",(e=>{"SPAN"===e.target.tagName&&(console.log("the following is e.target.value"),console.log(e.target.textContent),u(s(e.target.textContent)))}))}(),function(){const e=document.querySelector(".closeButton"),t=document.querySelector(".submitButton");e.addEventListener("click",(function(){h.style.animation="projectSlideUp 1.5s forwards",j()})),t.addEventListener("click",(function(){h.style.animation="projectSlideUp 1.5s forwards";const e=function(){const e=document.getElementById("title").value;let t=document.getElementById("description").value;if(e){const n=new g(e,t);return m.push(n),n}!function(){const e=document.querySelector(".errorProjectOverlay");e.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){e.style.animation="projectSlideUp 1.5s forwards"}),2500),j(),h.style.animation="projectSlideDown 1.5s forwards"}()}();if(e){a(e.title),u(e);for(let e=0;e<m.length;e++)console.log(e+1+" "+m[e].title)}j()}))}(),u({title:"defaultProject",description:"This is a default project. You can also create your own :)"}),a("defaultProject"),m[0]={title:"defaultProject",description:"This is a default project. You can also create your own :)"}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,