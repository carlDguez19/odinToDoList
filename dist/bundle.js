(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var c=o.length-1;c>-1&&!e;)e=o[c--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const n=t.p+"abbfad808c2786a6a2d4.png",o=t.p+"986e98635b18601755cf.png",c=t.p+"177a54134d0bd5aefd06.png",i=t.p+"edb755c23d1ebcf9c7a4.png",r=t.p+"c9c7160b568bb10d504c.png",l=f(".projectSection");function s(e){e.slice(0,7);const t=f(".sidebarProject");let n=document.createElement("span");n.textContent=e,n.classList.add("projectNameSidebar"),t.appendChild(n)}function d(e){a();const t=document.createElement("div"),n=document.createElement("input");n.type="checkbox",n.classList.add("projectCheckbox");const o=document.createElement("span");if(e.title.length>30){let t=e.title.slice(0,31);o.textContent=t+"..."}else o.textContent=e.title;o.classList.add("projectNameMain");const s=document.createElement("div"),d=document.createElement("div"),u=document.createElement("div"),p=document.createElement("div"),m=new Image;m.src=i,m.classList.add("projAdd");const f=new Image;f.src=r,f.classList.add("projEdit");const g=new Image;g.src=c,g.classList.add("projRemove"),d.appendChild(m),u.appendChild(f),p.appendChild(g),s.appendChild(d),s.appendChild(u),s.appendChild(p),s.classList.add("projectOptions"),t.appendChild(n),t.appendChild(o),t.appendChild(s),t.classList.add("project"),l.appendChild(t)}function a(){for(;l.firstChild;)l.removeChild(l.firstChild)}f(".projAdd"),f(".projRemove");const u=document.querySelector(".newProjectOverlay");function p(e){console.log("looking for project in arr");let t=0;for(let n=0;n<m.length;n++)if(t=n,m[n].title==e)return m[n]}let m=[];function f(e){return document.querySelector(e)}class g{constructor(e,t){this.title=e,this.description=t,this.toDos=[]}get title(){return this._title}get description(){return this._description}get toDoList(){return this._toDos}set title(e){this._title=e}set description(e){this._description=e}}const h=document.querySelector(".newProjectOverlay");function j(){document.getElementById("title").value="",document.getElementById("description").value=""}!function(){const e=document.querySelector(".menuContainer"),t=document.querySelector(".mainLogo"),r=document.querySelector(".menuClose"),l=document.querySelector(".createProj"),s=new Image;s.src=n,s.classList.add("main-menu-logo");const a=new Image;a.src=o,a.classList.add("main-logo");const u=new Image;u.src=c,u.classList.add("menuClose");const m=new Image;m.src=i,m.classList.add("addProjButton"),e.appendChild(s),t.appendChild(a),r.appendChild(u),l.appendChild(m);const f=document.querySelector(".sidebar-menu"),g=document.querySelector(".newProjectOverlay");e.addEventListener("click",(function(){f.style.animation="menuSlideOn 1.5s forwards"})),r.addEventListener("click",(function(){f.style.animation="menuSlideClose 1.5s forwards"})),l.addEventListener("click",(function(){console.log("create project button clicked!!"),f.style.animation="menuSlideClose 1.5s forwards",g.style.animation="projectSlideDown 1.5s forwards"})),f.addEventListener("click",(e=>{"SPAN"===e.target.tagName&&(console.log("the following is e.target.value"),console.log(e.target.textContent),d(p(e.target.textContent)))}))}(),function(){const t=document.querySelector(".closeButton"),n=document.querySelector(".submitButton");t.addEventListener("click",(function(){h.style.animation="projectSlideUp 1.5s forwards",j()})),n.addEventListener("click",(function(){console.log("submit button clicked"),h.style.animation="projectSlideUp 1.5s forwards";const t=function(){const e=document.getElementById("title").value;let t=document.getElementById("description").value;if(e){console.log("detected title");const n=new g(e,t);return m.push(n),console.log(m[m.length-1].title),console.log(m[m.length-1].description),n}return console.log("Need a title to create a project!"),void function(){const e=document.querySelector(".errorProjectOverlay");e.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){e.style.animation="projectSlideUp 1.5s forwards"}),2500),j(),h.style.animation="projectSlideDown 1.5s forwards"}()}();t&&(console.log("project obj returned successfully"),s(t.title),d(t),document.addEventListener("click",function(e){console.log("in projEditButton eventListener");const t=e.matches(".projEdit"),n=e.matches(".projRemove"),o=f(".projectNameMain");var c;t?(console.log("editButton clicked"),c=o.textContent,u.style.animation="projectSlideDown 1.5s forwards",f("#title").value=c,p(o)):n&&(console.log("removeButton clicked"),function(e){const t=f(".sidebarProject"),n=t.children;for(let o=0;o<n.length;o++)n[o].textContent==e&&t.removeChild(n[o])}(o.textContent),function(e){for(let t=0;t<m.length;t++)m[t].title==e&&m.splice(t,1)}(o.textContent),a())}(e.target))),j()}))}(),d({title:"defaultProject",description:"This is a default project. You can also create your own :)"}),s("defaultProject"),m[0]={title:"defaultProject",description:"This is a default project. You can also create your own :)"}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,