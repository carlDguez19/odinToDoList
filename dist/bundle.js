(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var c=o.length-1;c>-1&&!t;)t=o[c--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"abbfad808c2786a6a2d4.png",n=e.p+"986e98635b18601755cf.png",o=e.p+"177a54134d0bd5aefd06.png",c=e.p+"edb755c23d1ebcf9c7a4.png";let i=[];function r(e){return document.querySelector(e)}const s=e.p+"c9c7160b568bb10d504c.png",d=r(".projectSection");function l(e){let t=e.slice(0,7);const n=r(".sidebarProject");let o=document.createElement("span");e.length>6?o.textContent=t+"...":o.textContent=e,o.classList.add("projectNameSidebar"),n.appendChild(o)}function a(e){!function(){for(;d.firstChild;)d.removeChild(d.firstChild)}();const t=document.createElement("div"),n=document.createElement("input");n.type="checkbox",n.classList.add("projectCheckbox");const i=document.createElement("span");if(e.title.length>30){let t=e.title.slice(0,31);i.textContent=t+"..."}else i.textContent=e.title;i.classList.add("projectNameMain");const r=document.createElement("div"),l=document.createElement("div"),a=document.createElement("div"),u=document.createElement("div"),p=new Image;p.src=c,p.classList.add("projAdd");const m=new Image;m.src=s,m.classList.add("projEdit");const f=new Image;f.src=o,f.classList.add("projRemove"),l.appendChild(p),a.appendChild(m),u.appendChild(f),r.appendChild(l),r.appendChild(a),r.appendChild(u),r.classList.add("projectOptions"),t.appendChild(n),t.appendChild(i),t.appendChild(r),t.classList.add("project"),d.appendChild(t)}class u{constructor(e,t){this.title=e,this.description=t,this.toDos=[]}get title(){return this._title}get description(){return this._description}get toDoList(){return this._toDos}set title(e){this._title=e}set description(e){this._description=e}}const p=document.querySelector(".newProjectOverlay");function m(){document.getElementById("title").value="",document.getElementById("description").value=""}!function(){const e=document.querySelector(".menuContainer"),i=document.querySelector(".mainLogo"),r=document.querySelector(".menuClose"),s=document.querySelector(".createProj"),d=new Image;d.src=t,d.classList.add("main-menu-logo");const l=new Image;l.src=n,l.classList.add("main-logo");const a=new Image;a.src=o,a.classList.add("menuClose");const u=new Image;u.src=c,u.classList.add("addProjButton"),e.appendChild(d),i.appendChild(l),r.appendChild(a),s.appendChild(u);const p=document.querySelector(".sidebar-menu"),m=document.querySelector(".newProjectOverlay");e.addEventListener("click",(function(){p.style.animation="menuSlideOn 1.5s forwards"})),r.addEventListener("click",(function(){p.style.animation="menuSlideClose 1.5s forwards"})),s.addEventListener("click",(function(){console.log("create project button clicked!!"),p.style.animation="menuSlideClose 1.5s forwards",m.style.animation="projectSlideDown 1.5s forwards"})),p.addEventListener("click",(e=>{e.target.tagName}))}(),function(){const e=document.querySelector(".closeButton"),t=document.querySelector(".submitButton");e.addEventListener("click",(function(){p.style.animation="projectSlideUp 1.5s forwards",m()})),t.addEventListener("click",(function(){console.log("submit button clicked"),p.style.animation="projectSlideUp 1.5s forwards";const e=function(){const e=document.getElementById("title").value;let t=document.getElementById("description").value;if(e){console.log("detected title");const n=new u(e,t);return i.push(n),console.log(i[i.length-1].title),console.log(i[i.length-1].description),n}return console.log("Need a title to create a project!"),void function(){const e=document.querySelector(".errorProjectOverlay");e.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){e.style.animation="projectSlideUp 1.5s forwards"}),2500),m(),p.style.animation="projectSlideDown 1.5s forwards"}()}();e&&(console.log("project obj returned successfully"),l(e.title),a(e)),m()}))}(),a({title:"defaultProject",description:"This is a default project. You can also create your own :)"}),l("defaultProject")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1XLEVBQWVuRixTQUFTYSxjQUFjLHdCQUM1Q3NFLEVBQWFkLE1BQU1DLFVBQVksaUNBQy9CYyxZQUFXLFdBQ1BELEVBQWFkLE1BQU1DLFVBQVksOEJBQ25DLEdBQUcsTUFDSGQsSUFDQUQsRUFBWWMsTUFBTUMsVUFBWSxnQ0FDbEMsQ0FiUWUsRUFHUixDQTNCNkJDLEdBRWxCUixJQUNDUCxRQUFRQyxJQUFJLHFDQUNaekQsRUFBb0IrRCxFQUFhM0MsT0FDakNULEVBQXFCb0QsSUFFekJ0QixHQUNKLEdBQ0osQ0N4QkErQixHQUNBN0QsRUFBcUIsQ0FBQ1MsTUFBTyxpQkFBa0JZLFlBQWEsK0RBQzVEaEMsRUFBb0IsaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGludG9kb2xpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL29kaW50b2RvbGlzdC8uL3NyYy9tZW51RXZlbnRMaXN0ZW5lcnMuanMiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0Ly4vc3JjL3Byb2plY3RET00uanMiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0Ly4vc3JjL3Byb2plY3RDbGFzcy5qcyIsIndlYnBhY2s6Ly9vZGludG9kb2xpc3QvLi9zcmMvcHJvamVjdEZvcm0uanMiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsImltcG9ydCBNZW51IGZyb20gJy4uL3NyYy9pbWdzL21lbnUucG5nJ1xuaW1wb3J0IEJyYW5kIGZyb20gJy4uL3NyYy9pbWdzL1dvcmtlckFudHNNb2QucG5nJztcbmltcG9ydCBDbG9zZSBmcm9tICcuLi9zcmMvaW1ncy9jbG9zZS5wbmcnO1xuaW1wb3J0IENyZWF0ZSBmcm9tICcuLi9zcmMvaW1ncy9hZGQucG5nJztcbi8vSSBORUVEIFRPIEFERCBBIEdMT0JBTCBWQVJJQUJMRSBBUlJBWSBUSEFUIFNUT1JFUyBBTEwgVEhFIFBST0pFQ1RTIEhFUkVcbmV4cG9ydCBsZXQgcHJvakFyciA9IFtdO1xuXG5leHBvcnQgZnVuY3Rpb24gZHFzKGMpe1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVudUV2ZW50TGlzdGVuKCl7XG4gICAgY29uc3QgbWVudUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVudUNvbnRhaW5lclwiKTtcbiAgICBjb25zdCBtYWluTG9nb0NvbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW5Mb2dvXCIpO1xuICAgIGNvbnN0IGNsb3NlQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tZW51Q2xvc2VcIik7XG4gICAgY29uc3QgY3JlYXRlUHJvakNvbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNyZWF0ZVByb2pcIik7XG4gICAgXG4gICAgY29uc3QgbWVudUljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICBtZW51SWNvbi5zcmMgPSBNZW51O1xuICAgIG1lbnVJY29uLmNsYXNzTGlzdC5hZGQoJ21haW4tbWVudS1sb2dvJyk7XG5cbiAgICBjb25zdCBtYWluTG9nb0ltZyA9IG5ldyBJbWFnZSgpO1xuICAgIG1haW5Mb2dvSW1nLnNyYyA9IEJyYW5kO1xuICAgIG1haW5Mb2dvSW1nLmNsYXNzTGlzdC5hZGQoJ21haW4tbG9nbycpO1xuXG4gICAgY29uc3QgY2xvc2VJY29uID0gbmV3IEltYWdlKCk7XG4gICAgY2xvc2VJY29uLnNyYyA9IENsb3NlO1xuICAgIGNsb3NlSWNvbi5jbGFzc0xpc3QuYWRkKCdtZW51Q2xvc2UnKTtcblxuICAgIGNvbnN0IGNyZWF0ZVByb2pJY29uID0gbmV3IEltYWdlKCk7XG4gICAgY3JlYXRlUHJvakljb24uc3JjID0gQ3JlYXRlO1xuICAgIGNyZWF0ZVByb2pJY29uLmNsYXNzTGlzdC5hZGQoJ2FkZFByb2pCdXR0b24nKTtcblxuICAgIG1lbnVDb250YWluZXIuYXBwZW5kQ2hpbGQobWVudUljb24pO1xuICAgIG1haW5Mb2dvQ29udC5hcHBlbmRDaGlsZChtYWluTG9nb0ltZyk7XG4gICAgY2xvc2VDb250YWluZXIuYXBwZW5kQ2hpbGQoY2xvc2VJY29uKTtcbiAgICBjcmVhdGVQcm9qQ29udC5hcHBlbmRDaGlsZChjcmVhdGVQcm9qSWNvbik7XG5cbiAgICBjb25zdCBzaWRlQmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaWRlYmFyLW1lbnVcIik7XG4gICAgY29uc3QgcHJvak92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ld1Byb2plY3RPdmVybGF5XCIpO1xuXG4gICAgbWVudUNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHNpZGVCYXIuc3R5bGUuYW5pbWF0aW9uID0gJ21lbnVTbGlkZU9uIDEuNXMgZm9yd2FyZHMnO1xuICAgIH0pO1xuICAgIGNsb3NlQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICAgICAgc2lkZUJhci5zdHlsZS5hbmltYXRpb24gPSAnbWVudVNsaWRlQ2xvc2UgMS41cyBmb3J3YXJkcyc7XG4gICAgfSk7XG4gICAgY3JlYXRlUHJvakNvbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpe1xuICAgICAgICBjb25zb2xlLmxvZyhcImNyZWF0ZSBwcm9qZWN0IGJ1dHRvbiBjbGlja2VkISFcIik7XG4gICAgICAgIHNpZGVCYXIuc3R5bGUuYW5pbWF0aW9uID0gJ21lbnVTbGlkZUNsb3NlIDEuNXMgZm9yd2FyZHMnO1xuICAgICAgICBwcm9qT3ZlcmxheS5zdHlsZS5hbmltYXRpb24gPSAncHJvamVjdFNsaWRlRG93biAxLjVzIGZvcndhcmRzJztcbiAgICB9KTtcbiAgICBzaWRlQmFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgaWYoZS50YXJnZXQudGFnTmFtZSA9PT0gJ1NQQU4nKXtcblxuICAgICAgICB9XG4gICAgfSk7XG59IiwiaW1wb3J0IFJlbW92ZSBmcm9tICcuLi9zcmMvaW1ncy9jbG9zZS5wbmcnO1xuaW1wb3J0IENyZWF0ZSBmcm9tICcuLi9zcmMvaW1ncy9hZGQucG5nJztcbmltcG9ydCBFZGl0IGZyb20gJy4uL3NyYy9pbWdzL2VkaXQucG5nJztcbmltcG9ydCB7IGRxcyB9IGZyb20gJy4vbWVudUV2ZW50TGlzdGVuZXJzJztcblxuY29uc3QgbWFpblNlYyA9IGRxcyhcIi5wcm9qZWN0U2VjdGlvblwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFByb2plY3RUb1NpZGViYXIocHJvamVjdFRpdGxlKXtcbiAgICBsZXQgbmV3UHJvalRpdGxlID0gcHJvamVjdFRpdGxlLnNsaWNlKDAsNyk7XG4gICAgY29uc3QgcHJvalNpZGUgPSBkcXMoXCIuc2lkZWJhclByb2plY3RcIik7XG4gICAgbGV0IHByb2pUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICBpZihwcm9qZWN0VGl0bGUubGVuZ3RoID4gNil7XG4gICAgICAgIHByb2pUaXRsZS50ZXh0Q29udGVudCA9IG5ld1Byb2pUaXRsZSArIFwiLi4uXCI7XG4gICAgfWVsc2V7XG4gICAgICAgIHByb2pUaXRsZS50ZXh0Q29udGVudCA9IHByb2plY3RUaXRsZTtcbiAgICB9XG4gICAgcHJvalRpdGxlLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3ROYW1lU2lkZWJhcicpO1xuICAgIHByb2pTaWRlLmFwcGVuZENoaWxkKHByb2pUaXRsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5UHJvamVjdEluTWFpbihwcm9qZWN0KXtcbiAgICBjbGVhck1haW4oKTtcbiAgICBjb25zdCBwcm9qRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBcbiAgICBjb25zdCBwcm9qQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHByb2pDaGVja2JveC50eXBlID0gXCJjaGVja2JveFwiO1xuICAgIHByb2pDaGVja2JveC5jbGFzc0xpc3QuYWRkKFwicHJvamVjdENoZWNrYm94XCIpO1xuXG4gICAgXG4gICAgY29uc3QgcHJvak5hbWVTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGlmKHByb2plY3QudGl0bGUubGVuZ3RoID4gMzApe1xuICAgICAgICBsZXQgbWFpbk1vZFByb2pUaXRsZSA9IHByb2plY3QudGl0bGUuc2xpY2UoMCwzMSk7XG4gICAgICAgIHByb2pOYW1lU3Bhbi50ZXh0Q29udGVudCA9IG1haW5Nb2RQcm9qVGl0bGUgKyBcIi4uLlwiO1xuICAgIH1lbHNle1xuICAgICAgICBwcm9qTmFtZVNwYW4udGV4dENvbnRlbnQgPSBwcm9qZWN0LnRpdGxlO1xuICAgIH1cbiAgICBwcm9qTmFtZVNwYW4uY2xhc3NMaXN0LmFkZChcInByb2plY3ROYW1lTWFpblwiKTtcblxuICAgIFxuICAgIGNvbnN0IGJ1dHRvbkNvbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBcbiAgICBjb25zdCBhZGREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBlZGl0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgcmVtb3ZlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBjb25zdCBhZGRJY29uID0gbmV3IEltYWdlKCk7XG4gICAgYWRkSWNvbi5zcmMgPSBDcmVhdGU7XG4gICAgYWRkSWNvbi5jbGFzc0xpc3QuYWRkKCdwcm9qQWRkJyk7XG5cbiAgICBjb25zdCBlZGl0SWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGVkaXRJY29uLnNyYyA9IEVkaXQ7XG4gICAgZWRpdEljb24uY2xhc3NMaXN0LmFkZCgncHJvakVkaXQnKTtcblxuICAgIGNvbnN0IHJlbUljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICByZW1JY29uLnNyYyA9IFJlbW92ZTtcbiAgICByZW1JY29uLmNsYXNzTGlzdC5hZGQoJ3Byb2pSZW1vdmUnKTtcblxuICAgIGFkZERpdi5hcHBlbmRDaGlsZChhZGRJY29uKTtcbiAgICBlZGl0RGl2LmFwcGVuZENoaWxkKGVkaXRJY29uKTtcbiAgICByZW1vdmVEaXYuYXBwZW5kQ2hpbGQocmVtSWNvbik7XG4gICAgXG4gICAgYnV0dG9uQ29udC5hcHBlbmRDaGlsZChhZGREaXYpO1xuICAgIGJ1dHRvbkNvbnQuYXBwZW5kQ2hpbGQoZWRpdERpdik7XG4gICAgYnV0dG9uQ29udC5hcHBlbmRDaGlsZChyZW1vdmVEaXYpO1xuICAgIGJ1dHRvbkNvbnQuY2xhc3NMaXN0LmFkZChcInByb2plY3RPcHRpb25zXCIpO1xuXG4gICAgcHJvakRpdi5hcHBlbmRDaGlsZChwcm9qQ2hlY2tib3gpO1xuICAgIHByb2pEaXYuYXBwZW5kQ2hpbGQocHJvak5hbWVTcGFuKTtcbiAgICBwcm9qRGl2LmFwcGVuZENoaWxkKGJ1dHRvbkNvbnQpO1xuICAgIHByb2pEaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XG5cbiAgICBtYWluU2VjLmFwcGVuZENoaWxkKHByb2pEaXYpO1xufVxuXG5mdW5jdGlvbiBjbGVhck1haW4oKXtcbiAgICB3aGlsZShtYWluU2VjLmZpcnN0Q2hpbGQpe1xuICAgICAgICBtYWluU2VjLnJlbW92ZUNoaWxkKG1haW5TZWMuZmlyc3RDaGlsZClcbiAgICB9XG59IiwiZXhwb3J0IGNsYXNzIFByb2plY3R7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uKXtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMudG9Eb3MgPSBbXTtcbiAgICB9XG4gICAgZ2V0IHRpdGxlKCl7XG4gICAgICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgICB9XG4gICAgZ2V0IGRlc2NyaXB0aW9uKCl7XG4gICAgICAgIHJldHVybiB0aGlzLl9kZXNjcmlwdGlvbjtcbiAgICB9XG4gICAgZ2V0IHRvRG9MaXN0KCl7Ly9nZXQgYXJyYXkgdGhlbiBwdXNoIGEgdG9Eb1xuICAgICAgICByZXR1cm4gdGhpcy5fdG9Eb3M7XG4gICAgfVxuXG4gICAgc2V0IHRpdGxlKG5ld1RpdGxlKXtcbiAgICAgICAgdGhpcy5fdGl0bGUgPSBuZXdUaXRsZTtcbiAgICB9XG4gICAgc2V0IGRlc2NyaXB0aW9uKG5ld0Rlc2Mpe1xuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IG5ld0Rlc2M7XG4gICAgfVxuXG59IiwiaW1wb3J0IHsgUHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3RDbGFzc1wiO1xuaW1wb3J0IHsgcHJvakFyciB9IGZyb20gXCIuL21lbnVFdmVudExpc3RlbmVyc1wiO1xuaW1wb3J0IHsgYWRkUHJvamVjdFRvU2lkZWJhciB9IGZyb20gXCIuL3Byb2plY3RET01cIjtcbmltcG9ydCB7IGRpc3BsYXlQcm9qZWN0SW5NYWluIH0gZnJvbSBcIi4vcHJvamVjdERPTVwiO1xuXG5jb25zdCBwcm9qT3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmV3UHJvamVjdE92ZXJsYXlcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9qZWN0T3ZlcmxheVN0dWZmKCl7XG4gICAgLy9jb25zdCBwcm9qT3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmV3UHJvamVjdE92ZXJsYXlcIik7XG5cbiAgICAvL2J1dHRvbnNcbiAgICBjb25zdCBjbG9zZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2xvc2VCdXR0b25cIik7XG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdWJtaXRCdXR0b25cIik7XG5cbiAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHByb2pPdmVybGF5LnN0eWxlLmFuaW1hdGlvbiA9ICdwcm9qZWN0U2xpZGVVcCAxLjVzIGZvcndhcmRzJztcbiAgICAgICAgcHJvamVjdEZvcm1DbGVhcigpO1xuICAgIH0pXG4gICAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICAgICAgY29uc29sZS5sb2coXCJzdWJtaXQgYnV0dG9uIGNsaWNrZWRcIik7XG4gICAgICAgIHByb2pPdmVybGF5LnN0eWxlLmFuaW1hdGlvbiA9ICdwcm9qZWN0U2xpZGVVcCAxLjVzIGZvcndhcmRzJztcbiAgICAgICAgY29uc3QgcHJvamVjdFBhcmFtID0gZXh0cmFjdERhdGFGb3JQcm9qZWN0KCk7XG4gICAgICAgIC8vY3JlYXRlUHJvamVjdERPTShwcm9qZWN0UGFyYW0pOy8vdGhpcyB3aWxsIGJlIGluIHByb2plY3RET00uanMgZmlsZVxuICAgICAgICBpZihwcm9qZWN0UGFyYW0pe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJwcm9qZWN0IG9iaiByZXR1cm5lZCBzdWNjZXNzZnVsbHlcIik7XG4gICAgICAgICAgICBhZGRQcm9qZWN0VG9TaWRlYmFyKHByb2plY3RQYXJhbS50aXRsZSkvL3RoaXMgd2lsbCBiZSBpbiBwcm9qZWN0RE9NLmpzIGZpbGVcbiAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0SW5NYWluKHByb2plY3RQYXJhbSk7XG4gICAgICAgIH1cbiAgICAgICAgcHJvamVjdEZvcm1DbGVhcigpO1xuICAgIH0pXG59XG5cbmZ1bmN0aW9uIGV4dHJhY3REYXRhRm9yUHJvamVjdCgpe1xuICAgIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlXG4gICAgbGV0IGRlc2NJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVzY3JpcHRpb25cIikudmFsdWU7XG5cbiAgICBpZih0aXRsZUlucHV0KXtcbiAgICAgICAgY29uc29sZS5sb2coXCJkZXRlY3RlZCB0aXRsZVwiKTsvL2RlYnVnZ2luZ1xuICAgICAgICBjb25zdCBwcm9qZWN0TWFkZSA9IG5ldyBQcm9qZWN0KHRpdGxlSW5wdXQsIGRlc2NJbnB1dCk7XG4gICAgICAgIHByb2pBcnIucHVzaChwcm9qZWN0TWFkZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHByb2pBcnJbKHByb2pBcnIubGVuZ3RoKS0xXS50aXRsZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHByb2pBcnJbKHByb2pBcnIubGVuZ3RoKS0xXS5kZXNjcmlwdGlvbik7XG4gICAgICAgIHJldHVybiBwcm9qZWN0TWFkZTtcbiAgICB9ZWxzZXtcbiAgICAgICAgY29uc29sZS5sb2coXCJOZWVkIGEgdGl0bGUgdG8gY3JlYXRlIGEgcHJvamVjdCFcIik7Ly9kZWJ1Z2dpbmdcbiAgICAgICAgZGlzcGxheU5lZWRUaXRsZSgpOy8vIENBTiBJTlNFUlQgRE9NIE1BTklQVUxBVElPTiBUTyBTSElGVCBET1dOIFRIRSBFUlJPUiBPVkVSTEFZIDopXG4gICAgICAgIHJldHVybjtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlOZWVkVGl0bGUoKXtcbiAgICBjb25zdCBlcnJvck92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVycm9yUHJvamVjdE92ZXJsYXlcIik7XG4gICAgZXJyb3JPdmVybGF5LnN0eWxlLmFuaW1hdGlvbiA9IFwicHJvamVjdFNsaWRlRG93biAxLjVzIGZvcndhcmRzXCJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgIGVycm9yT3ZlcmxheS5zdHlsZS5hbmltYXRpb24gPSBcInByb2plY3RTbGlkZVVwIDEuNXMgZm9yd2FyZHNcIlxuICAgIH0sIDI1MDApO1xuICAgIHByb2plY3RGb3JtQ2xlYXIoKTtcbiAgICBwcm9qT3ZlcmxheS5zdHlsZS5hbmltYXRpb24gPSBcInByb2plY3RTbGlkZURvd24gMS41cyBmb3J3YXJkc1wiO1xufVxuXG5mdW5jdGlvbiBwcm9qZWN0Rm9ybUNsZWFyKCl7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aXRsZVwiKS52YWx1ZSA9IFwiXCI7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKS52YWx1ZSA9IFwiXCI7XG59IiwiaW1wb3J0IHsgbWVudUV2ZW50TGlzdGVuIH0gZnJvbSBcIi4vbWVudUV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBhZGRQcm9qZWN0VG9TaWRlYmFyLCBkaXNwbGF5UHJvamVjdEluTWFpbiB9IGZyb20gXCIuL3Byb2plY3RET01cIjtcbmltcG9ydCB7IHByb2plY3RPdmVybGF5U3R1ZmYgfSBmcm9tIFwiLi9wcm9qZWN0Rm9ybVwiO1xuLy8gaW1wb3J0IHsgUHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3RDbGFzc1wiO1xuLy8gaW1wb3J0IHsgY3JlYXRlUHJvamVjdEZyb21EYXRhIH0gZnJvbSBcIi4vcHJvamVjdEZvcm1cIjtcbm1lbnVFdmVudExpc3RlbigpO1xucHJvamVjdE92ZXJsYXlTdHVmZigpO1xuZGlzcGxheVByb2plY3RJbk1haW4oe3RpdGxlOiBcImRlZmF1bHRQcm9qZWN0XCIsIGRlc2NyaXB0aW9uOiBcIlRoaXMgaXMgYSBkZWZhdWx0IHByb2plY3QuIFlvdSBjYW4gYWxzbyBjcmVhdGUgeW91ciBvd24gOilcIn0pO1xuYWRkUHJvamVjdFRvU2lkZWJhcihcImRlZmF1bHRQcm9qZWN0XCIpO1xuLy8gbGV0IHByb2oxID0gbmV3IFByb2plY3QoXCJjYXJsb3NCcnVoXCIsIFwiYXBpdWZcIik7XG4vLyBjb25zb2xlLmxvZyhwcm9qMS5uYW1lKTtcbi8vIGNvbnNvbGUubG9nKHByb2oxLmRlc2NyaXB0aW9uKTsiXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImRvY3VtZW50IiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImxlbmd0aCIsImkiLCJFcnJvciIsInJlcGxhY2UiLCJwIiwicHJvakFyciIsImRxcyIsImMiLCJxdWVyeVNlbGVjdG9yIiwibWFpblNlYyIsImFkZFByb2plY3RUb1NpZGViYXIiLCJwcm9qZWN0VGl0bGUiLCJuZXdQcm9qVGl0bGUiLCJzbGljZSIsInByb2pTaWRlIiwicHJvalRpdGxlIiwiY3JlYXRlRWxlbWVudCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kQ2hpbGQiLCJkaXNwbGF5UHJvamVjdEluTWFpbiIsInByb2plY3QiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJjbGVhck1haW4iLCJwcm9qRGl2IiwicHJvakNoZWNrYm94IiwidHlwZSIsInByb2pOYW1lU3BhbiIsInRpdGxlIiwibWFpbk1vZFByb2pUaXRsZSIsImJ1dHRvbkNvbnQiLCJhZGREaXYiLCJlZGl0RGl2IiwicmVtb3ZlRGl2IiwiYWRkSWNvbiIsIkltYWdlIiwiZWRpdEljb24iLCJyZW1JY29uIiwiUHJvamVjdCIsImNvbnN0cnVjdG9yIiwiZGVzY3JpcHRpb24iLCJ0b0RvcyIsIl90aXRsZSIsIl9kZXNjcmlwdGlvbiIsInRvRG9MaXN0IiwiX3RvRG9zIiwibmV3VGl0bGUiLCJuZXdEZXNjIiwicHJvak92ZXJsYXkiLCJwcm9qZWN0Rm9ybUNsZWFyIiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSIsIm1lbnVDb250YWluZXIiLCJtYWluTG9nb0NvbnQiLCJjbG9zZUNvbnRhaW5lciIsImNyZWF0ZVByb2pDb250IiwibWVudUljb24iLCJtYWluTG9nb0ltZyIsImNsb3NlSWNvbiIsImNyZWF0ZVByb2pJY29uIiwic2lkZUJhciIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdHlsZSIsImFuaW1hdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJ0YXJnZXQiLCJ0YWdOYW1lIiwibWVudUV2ZW50TGlzdGVuIiwiY2xvc2VCdXR0b24iLCJzdWJtaXRCdXR0b24iLCJwcm9qZWN0UGFyYW0iLCJ0aXRsZUlucHV0IiwiZGVzY0lucHV0IiwicHJvamVjdE1hZGUiLCJwdXNoIiwiZXJyb3JPdmVybGF5Iiwic2V0VGltZW91dCIsImRpc3BsYXlOZWVkVGl0bGUiLCJleHRyYWN0RGF0YUZvclByb2plY3QiLCJwcm9qZWN0T3ZlcmxheVN0dWZmIl0sInNvdXJjZVJvb3QiOiIifQ==