(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var c=o.length-1;c>-1&&!t;)t=o[c--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"abbfad808c2786a6a2d4.png",n=e.p+"986e98635b18601755cf.png",o=e.p+"177a54134d0bd5aefd06.png",c=e.p+"edb755c23d1ebcf9c7a4.png",i=e.p+"c9c7160b568bb10d504c.png",r=m(".projectSection");function s(e){e.slice(0,7);const t=m(".sidebarProject");let n=document.createElement("span");n.textContent=e,n.classList.add("projectNameSidebar"),t.appendChild(n)}function l(e){d();const t=document.createElement("div"),n=document.createElement("input");n.type="checkbox",n.classList.add("projectCheckbox");const s=document.createElement("span");if(e.title.length>30){let t=e.title.slice(0,31);s.textContent=t+"..."}else s.textContent=e.title;s.classList.add("projectNameMain");const l=document.createElement("div"),a=document.createElement("div"),u=document.createElement("div"),p=document.createElement("div"),m=new Image;m.src=c,m.classList.add("projAdd");const f=new Image;f.src=i,f.classList.add("projEdit");const g=new Image;g.src=o,g.classList.add("projRemove"),a.appendChild(m),u.appendChild(f),p.appendChild(g),l.appendChild(a),l.appendChild(u),l.appendChild(p),l.classList.add("projectOptions"),t.appendChild(n),t.appendChild(s),t.appendChild(l),t.classList.add("project"),r.appendChild(t)}function d(){for(;r.firstChild;)r.removeChild(r.firstChild)}m(".projAdd"),m(".projRemove");const a=document.querySelector(".newProjectOverlay");function u(e){console.log("looking for project in arr");let t=0;for(let n=0;n<p.length;n++)if(t=n,p[n].title==e)return p[n]}let p=[];function m(e){return document.querySelector(e)}class f{constructor(e,t){this.title=e,this.description=t,this.toDos=[]}get title(){return this._title}get description(){return this._description}get toDoList(){return this._toDos}set title(e){this._title=e}set description(e){this._description=e}}const g=document.querySelector(".newProjectOverlay");function h(){document.getElementById("title").value="",document.getElementById("description").value=""}!function(){const e=document.querySelector(".menuContainer"),i=document.querySelector(".mainLogo"),r=document.querySelector(".menuClose"),s=document.querySelector(".createProj"),d=new Image;d.src=t,d.classList.add("main-menu-logo");const a=new Image;a.src=n,a.classList.add("main-logo");const p=new Image;p.src=o,p.classList.add("menuClose");const m=new Image;m.src=c,m.classList.add("addProjButton"),e.appendChild(d),i.appendChild(a),r.appendChild(p),s.appendChild(m);const f=document.querySelector(".sidebar-menu"),g=document.querySelector(".newProjectOverlay");e.addEventListener("click",(function(){f.style.animation="menuSlideOn 1.5s forwards"})),r.addEventListener("click",(function(){f.style.animation="menuSlideClose 1.5s forwards"})),s.addEventListener("click",(function(){console.log("create project button clicked!!"),f.style.animation="menuSlideClose 1.5s forwards",g.style.animation="projectSlideDown 1.5s forwards"})),f.addEventListener("click",(e=>{"SPAN"===e.target.tagName&&(console.log("the following is e.target.value"),console.log(e.target.textContent),l(u(e.target.textContent)))}))}(),function(){const e=document.querySelector(".closeButton"),t=document.querySelector(".submitButton");e.addEventListener("click",(function(){g.style.animation="projectSlideUp 1.5s forwards",h()})),t.addEventListener("click",(function(){console.log("submit button clicked"),g.style.animation="projectSlideUp 1.5s forwards";const e=function(){const e=document.getElementById("title").value;let t=document.getElementById("description").value;if(e){console.log("detected title");const n=new f(e,t);return p.push(n),console.log(p[p.length-1].title),console.log(p[p.length-1].description),n}return console.log("Need a title to create a project!"),void function(){const e=document.querySelector(".errorProjectOverlay");e.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){e.style.animation="projectSlideUp 1.5s forwards"}),2500),h(),g.style.animation="projectSlideDown 1.5s forwards"}()}();e&&(console.log("project obj returned successfully"),s(e.title),l(e),document.addEventListener("click",(function(e){console.log("in projEditButton eventListener");const t=e.target.closest(".projEdit"),n=e.target.closest(".projRemove"),o=m(".projectNameMain");var c;t?(c=o.textContent,a.style.animation="projectSlideDown 1.5s forwards",m("#title").value=c,u(o)):n&&(function(e){const t=m(".sidebarProject"),n=t.children;for(let o=0;o<n.length;o++)n[o].textContent==e&&t.removeChild(n[o])}(o.textContent),function(e){for(let t=0;t<p.length;t++)p[t].title==e&&p.splice(t,1)}(o.textContent),d())}))),h()}))}(),l({title:"defaultProject",description:"This is a default project. You can also create your own :)"}),s("defaultProject"),p[0]={title:"defaultProject",description:"This is a default project. You can also create your own :)"}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,