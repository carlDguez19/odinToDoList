(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&!e;)e=o[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"abbfad808c2786a6a2d4.png",n=t.p+"986e98635b18601755cf.png",o=t.p+"177a54134d0bd5aefd06.png",i=t.p+"edb755c23d1ebcf9c7a4.png",c=t.p+"c9c7160b568bb10d504c.png";class s{constructor(t,e,n,o,i){this.tTitle=t,this.tDesc=e,this.tDue=n,this.tPrio=o,this.tProj=i}set tTitle(t){this._tTitle=t}set tDesc(t){this._tDesc=t}set tDue(t){this._tDue=t}set tPrio(t){this._tPrio=t}set tProj(t){this._tProj=t}get tTitle(){return this._tTitle}get tDesc(){return this._tDesc}get tDue(){return this._tDue}get tPrio(){return this._tPrio}get tProj(){return this._tProj}}class r{constructor(t,e){this.title=t,this.description=e,this.toDos=[]}newTask(t,e,n,o,i){let c=new s(t,e,n,o,i);return this.toDos.push(c),c}printTasks(){for(var t=0;t<this.toDos.length;t++)console.log(this.toDos[t])}get numOfTasks(){return this.toDos.length}get title(){return this._title}get description(){return this._description}get toDoList(){return this.toDos}set title(t){this._title=t}set description(t){this._description=t}}const l=document.querySelector(".newProjectOverlay");function d(){const t=document.querySelector(".errorProjectOverlay");t.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){t.style.animation="projectSlideUp 1.5s forwards"}),2500)}function a(){document.getElementById("title").value="",document.getElementById("description").value=""}function u(t){const e=document.querySelector(".todoUL"),n=document.createElement("li"),i=document.createElement("div"),s=document.createElement("input");s.type="checkbox";const r=document.createElement("input");r.type="date";const l=document.createElement("div"),d=document.createElement("div"),a=new Image;a.src=c,a.classList.add("projEdit");const u=new Image;u.src=o,u.classList.add("projRemove"),l.appendChild(a),d.appendChild(u),n.textContent=t.tTitle+"  "+t.tDue,n.appendChild(r),i.appendChild(s),i.appendChild(l),i.appendChild(d),i.classList.add("taskButtons"),n.appendChild(i),n.classList.add("todo"),e.appendChild(n)}const m=b(".newTaskOverlay"),p=b(".taskCloseButton"),h=b(".taskSubmitButton");function g(){p.addEventListener("click",(function(){v(),m.style.animation="projectSlideUp 1.5s forwards"})),h.addEventListener("click",f)}function f(){m.style.animation="projectSlideUp 1.5s forwards";const t=function(t){const e=document.getElementById("tTitle").value,n=document.getElementById("tDescription").value,o=document.getElementById("tDueDate").value,i=document.getElementById("tTaskPrio").value,c=b(".projectNameMain").textContent;console.log(c);const s=C(c);if(e&&o){console.log(s.title);const t=s.newTask(e,n,o,i,s.title);return v(),t}return d(),v(),void(m.style.animation="projectSlideDown 1.5s forwards")}();t&&u(t),v(),h.removeEventListener("click",f)}function v(){document.getElementById("tTitle").value="",document.getElementById("tDescription").value="",document.getElementById("tDueDate").value="",document.getElementById("tTaskPrio").value="Select One"}const y=document.querySelector(".newProjectOverlay");function w(){document.addEventListener("click",j)}var j=function(t){const e=t.target.matches(".projEdit"),n=t.target.matches(".projRemove"),o=t.target.matches(".projAdd"),i=b(".projectNameMain");if(e){console.log("editButton clicked"),c=i.textContent,y.style.animation="projectSlideDown 1.5s forwards",b("#title").value=c;for(let t=0;t<k.length;t++)console.log(t+1+" "+k[t].title)}else if(n){console.log("removeButton clicked"),function(t){const e=b(".sidebarProject"),n=e.children;for(let o=0;o<n.length;o++)n[o].textContent==t&&e.removeChild(n[o])}(i.textContent),function(t){for(let e=0;e<k.length;e++)k[e].title==t&&k.splice(e,1)}(i.textContent),D();for(let t=0;t<k.length;t++)console.log(t+1+" "+k[t].title)}else o&&(m.style.animation="projectSlideDown 1.5s forwards",g());var c};function C(t){let e=0;for(let n=0;n<k.length;n++)if(e=n,k[n].title==t)return k[n]}const E=b(".projectSection");function S(t){const e=b(".sidebarProject");let n=document.createElement("span");n.textContent=t,n.classList.add("projectNameSidebar"),e.appendChild(n)}function L(t){D();const e=document.createElement("div"),n=document.createElement("ul");n.classList.add("todoUL");const s=document.createElement("input");s.type="checkbox",s.classList.add("projectCheckbox");const r=document.createElement("span");if(t.title.length>30){let e=t.title.slice(0,31);r.textContent=e+"..."}else r.textContent=t.title;r.classList.add("projectNameMain");const l=document.createElement("div"),d=document.createElement("div"),a=document.createElement("div"),m=document.createElement("div"),p=new Image;p.src=i,p.classList.add("projAdd");const h=new Image;h.src=c,h.classList.add("projEdit");const g=new Image;g.src=o,g.classList.add("projRemove"),d.appendChild(p),a.appendChild(h),m.appendChild(g),l.appendChild(d),l.appendChild(a),l.appendChild(m),l.classList.add("projectOptions"),e.appendChild(s),e.appendChild(r),e.appendChild(l),e.classList.add("project"),E.appendChild(e),E.appendChild(n),function(t){const e=t.toDoList;if(e)for(var n=0;n<e.length;n++)u(e[n])}(t),w(),console.log("this console log is after the projectElisteners it looks like its working??")}function D(){for(document.removeEventListener("click",j);E.firstChild;)E.removeChild(E.firstChild)}let k=[];function b(t){return document.querySelector(t)}!function(){const t=document.querySelector(".menuContainer"),c=document.querySelector(".mainLogo"),s=document.querySelector(".menuClose"),r=document.querySelector(".createProj"),l=new Image;l.src=e,l.classList.add("main-menu-logo");const d=new Image;d.src=n,d.classList.add("main-logo");const a=new Image;a.src=o,a.classList.add("menuClose");const u=new Image;u.src=i,u.classList.add("addProjButton"),t.appendChild(l),c.appendChild(d),s.appendChild(a),r.appendChild(u);const m=document.querySelector(".sidebar-menu"),p=document.querySelector(".newProjectOverlay");t.addEventListener("click",(function(){m.style.animation="menuSlideOn 1.5s forwards"})),s.addEventListener("click",(function(){m.style.animation="menuSlideClose 1.5s forwards"})),r.addEventListener("click",(function(){m.style.animation="menuSlideClose 1.5s forwards",p.style.animation="projectSlideDown 1.5s forwards"})),m.addEventListener("click",(t=>{"SPAN"===t.target.tagName&&(console.log("the following is e.target.value"),console.log(t.target.textContent),L(C(t.target.textContent)))}))}(),function(){const t=document.querySelector(".closeButton"),e=document.querySelector(".submitButton");t.addEventListener("click",(function(){l.style.animation="projectSlideUp 1.5s forwards",a()})),e.addEventListener("click",(function(){l.style.animation="projectSlideUp 1.5s forwards";const t=function(){const t=document.getElementById("title").value;let e=document.getElementById("description").value;if(t){const n=new r(t,e);return k.push(n),n}return d(),a(),void(l.style.animation="projectSlideDown 1.5s forwards")}();if(t){S(t.title),L(t);for(let t=0;t<k.length;t++)console.log(t+1+" "+k[t].title)}a()}))}();const P=new r("defaultProject","This is a default project. You can also create your own :)");k[0]=P,L(P),S("defaultProject"),w(),g()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,