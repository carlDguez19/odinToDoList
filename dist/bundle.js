(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var c=o.length-1;c>-1&&!t;)t=o[c--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"abbfad808c2786a6a2d4.png",n=e.p+"986e98635b18601755cf.png",o=e.p+"177a54134d0bd5aefd06.png",c=e.p+"edb755c23d1ebcf9c7a4.png",i=e.p+"c9c7160b568bb10d504c.png";class r{constructor(e,t){this.title=e,this.description=t,this.toDos=[]}get title(){return this._title}get description(){return this._description}get toDoList(){return this._toDos}set title(e){this._title=e}set description(e){this._description=e}}const l=document.querySelector(".newProjectOverlay");function s(){document.getElementById("title").value="",document.getElementById("description").value=""}const d=j(".newTaskOverlay");function a(){const e=j(".taskCloseButton"),t=j(".taskSubmitButton");e.addEventListener("click",(function(){document.getElementById("tTitle").value="",document.getElementById("tDescription").value="",document.getElementById("tDueDate").value="",document.getElementById("tTaskPrio").value="Select One",d.style.animation="projectSlideUp 1.5s forwards"})),t.addEventListener("click",(function(){d.style.animation="projectSlideUp 1.5s forwards"}))}j(".projAdd"),j(".projRemove");const u=document.querySelector(".newProjectOverlay");var p=function(e){const t=e.target.matches(".projEdit"),n=e.target.matches(".projRemove"),o=e.target.matches(".projAdd"),c=j(".projectNameMain");if(t){console.log("editButton clicked"),i=c.textContent,u.style.animation="projectSlideDown 1.5s forwards",j("#title").value=i,m(c);for(let e=0;e<y.length;e++)console.log(e+1+" "+y[e].title)}else if(n){console.log("removeButton clicked"),function(e){const t=j(".sidebarProject"),n=t.children;for(let o=0;o<n.length;o++)n[o].textContent==e&&t.removeChild(n[o])}(c.textContent),function(e){for(let t=0;t<y.length;t++)y[t].title==e&&y.splice(t,1)}(c.textContent),v();for(let e=0;e<y.length;e++)console.log(e+1+" "+y[e].title)}else o&&a();var i};function m(e){let t=0;for(let n=0;n<y.length;n++)if(t=n,y[n].title==e)return y[n]}const f=j(".projectSection");function g(e){const t=j(".sidebarProject");let n=document.createElement("span");n.textContent=e,n.classList.add("projectNameSidebar"),t.appendChild(n)}function h(e){v();const t=document.createElement("div"),n=document.createElement("ul");n.classList.add("todoUL");const r=document.createElement("input");r.type="checkbox",r.classList.add("projectCheckbox");const l=document.createElement("span");if(e.title.length>30){let t=e.title.slice(0,31);l.textContent=t+"..."}else l.textContent=e.title;l.classList.add("projectNameMain");const s=document.createElement("div"),d=document.createElement("div"),a=document.createElement("div"),u=document.createElement("div"),m=new Image;m.src=c,m.classList.add("projAdd");const g=new Image;g.src=i,g.classList.add("projEdit");const h=new Image;h.src=o,h.classList.add("projRemove"),d.appendChild(m),a.appendChild(g),u.appendChild(h),s.appendChild(d),s.appendChild(a),s.appendChild(u),s.classList.add("projectOptions"),t.appendChild(r),t.appendChild(l),t.appendChild(s),t.classList.add("project"),f.appendChild(t),f.appendChild(n),document.addEventListener("click",p)}function v(){for(document.removeEventListener("click",p);f.firstChild;)f.removeChild(f.firstChild)}let y=[];function j(e){return document.querySelector(e)}!function(){const e=document.querySelector(".menuContainer"),i=document.querySelector(".mainLogo"),r=document.querySelector(".menuClose"),l=document.querySelector(".createProj"),s=new Image;s.src=t,s.classList.add("main-menu-logo");const d=new Image;d.src=n,d.classList.add("main-logo");const a=new Image;a.src=o,a.classList.add("menuClose");const u=new Image;u.src=c,u.classList.add("addProjButton"),e.appendChild(s),i.appendChild(d),r.appendChild(a),l.appendChild(u);const p=document.querySelector(".sidebar-menu"),f=document.querySelector(".newProjectOverlay");e.addEventListener("click",(function(){p.style.animation="menuSlideOn 1.5s forwards"})),r.addEventListener("click",(function(){p.style.animation="menuSlideClose 1.5s forwards"})),l.addEventListener("click",(function(){p.style.animation="menuSlideClose 1.5s forwards",f.style.animation="projectSlideDown 1.5s forwards"})),p.addEventListener("click",(e=>{"SPAN"===e.target.tagName&&(console.log("the following is e.target.value"),console.log(e.target.textContent),h(m(e.target.textContent)))}))}(),function(){const e=document.querySelector(".closeButton"),t=document.querySelector(".submitButton");e.addEventListener("click",(function(){l.style.animation="projectSlideUp 1.5s forwards",s()})),t.addEventListener("click",(function(){l.style.animation="projectSlideUp 1.5s forwards";const e=function(){const e=document.getElementById("title").value;let t=document.getElementById("description").value;if(e){const n=new r(e,t);return y.push(n),n}!function(){const e=document.querySelector(".errorProjectOverlay");e.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){e.style.animation="projectSlideUp 1.5s forwards"}),2500),s(),l.style.animation="projectSlideDown 1.5s forwards"}()}();if(e){g(e.title),h(e);for(let e=0;e<y.length;e++)console.log(e+1+" "+y[e].title)}s()}))}(),h({title:"defaultProject",description:"This is a default project. You can also create your own :)"}),g("defaultProject"),y[0]={title:"defaultProject",description:"This is a default project. You can also create your own :)"},a()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,