(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&!e;)e=o[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"abbfad808c2786a6a2d4.png",n=t.p+"986e98635b18601755cf.png",o=t.p+"177a54134d0bd5aefd06.png",i=t.p+"edb755c23d1ebcf9c7a4.png",s=t.p+"c9c7160b568bb10d504c.png";class c{constructor(t,e,n,o,i){this.tTitle=t,this.tDesc=e,this.tDue=n,this.tPrio=o,this.tProj=i}set tTitle(t){this._tTitle=t}set tDesc(t){this._tDesc=t}set tDue(t){this._tDue=t}set tPrio(t){this._tPrio=t}set tProj(t){this._tProj=t}get tTitle(){return this._tTitle}get tDesc(){return this._tDesc}get tDue(){return this._tDue}get tPrio(){return this._tPrio}get tProj(){return this._tProj}}class r{constructor(t,e){this.title=t,this.description=e,this.toDos=[]}newTask(t,e,n,o,i){let s=new c(t,e,n,o,i);return this.toDos.push(s),s}removeTaskFromArr(t){for(var e=0;e<this.toDos.length;e++)this.toDos[e].Ttitle==t&&this.toDos.splice(e,1)}printTasks(){console.log("current tasks in project: ");for(var t=0;t<this.toDos.length;t++)console.log(this.toDos[t].tTitle)}get numOfTasks(){return this.toDos.length}get title(){return this._title}get description(){return this._description}get toDoList(){return this.toDos}set title(t){this._title=t}set description(t){this._description=t}}const a=document.querySelector(".newProjectOverlay");function l(){const t=document.querySelector(".errorProjectOverlay");t.style.animation="projectSlideDown 1.5s forwards",setTimeout((function(){t.style.animation="projectSlideUp 1.5s forwards"}),2500)}function d(){document.getElementById("title").value="",document.getElementById("description").value=""}let u=!1,m=!1;var p=function(t){if(t.target.matches(".taskProjEdit")){u=!0;const e=t.target.parentElement.textContent;console.log(e)}else if(t.target.matches(".taskProjRemove")){m=!0;const e=t.target.parentElement.parentElement.parentElement.textContent,n=x(".projectNameMain");console.log(e),console.log(n.textContent);const o=L(n);o.removeTaskFromArr(e),o.printTasks()}};function h(t){const e=document.querySelector(".todoUL"),n=document.createElement("li"),i=document.createElement("div");i.textContent=t.tDue,i.classList.add("dateTaskDisp");const c=document.createElement("div"),r=document.createElement("input");r.type="checkbox";const a=document.createElement("input");a.type="date",a.value=t.tDue;const l=document.createElement("div"),d=document.createElement("div"),u=new Image;u.src=s,u.classList.add("taskProjEdit");const m=new Image;m.src=o,m.classList.add("taskProjRemove"),l.appendChild(u),d.appendChild(m),n.textContent=t.tTitle,c.appendChild(l),c.appendChild(d),c.appendChild(r),c.classList.add("taskButtons"),n.appendChild(c),n.appendChild(a),n.classList.add("todo"),e.appendChild(n),document.addEventListener("click",p)}const g=x(".newTaskOverlay"),f=x(".taskCloseButton"),v=x(".taskSubmitButton");function C(){g.style.animation="projectSlideUp 1.5s forwards";const t=function(t){const e=document.getElementById("tTitle").value,n=document.getElementById("tDescription").value,o=document.getElementById("tDueDate").value,i=document.getElementById("tTaskPrio").value,s=L(x(".projectNameMain").textContent);if(e&&o){const t=s.newTask(e,n,o,i,s.title);return j(),t}return l(),j(),void(g.style.animation="projectSlideDown 1.5s forwards")}();t&&h(t),j(),v.removeEventListener("click",C)}function j(){document.getElementById("tTitle").value="",document.getElementById("tDescription").value="",document.getElementById("tDueDate").value="",document.getElementById("tTaskPrio").value="Select One"}const y=document.querySelector(".newProjectOverlay");let E=!1,w=null;var D=function(t){const e=t.target.matches(".projEdit"),n=t.target.matches(".projRemove"),o=t.target.matches(".projAdd"),i=x(".projectNameMain");var s;w=i,e?(s=i.textContent,y.style.animation="projectSlideDown 1.5s forwards",x("#title").value=s,E=!0):n?(function(t){const e=x(".sidebarProject"),n=e.children;for(let o=0;o<n.length;o++)n[o].textContent==t&&e.removeChild(n[o])}(i.textContent),removeProjArr(i.textContent),T()):o&&(g.style.animation="projectSlideDown 1.5s forwards",f.addEventListener("click",(function(){j(),g.style.animation="projectSlideUp 1.5s forwards"})),v.addEventListener("click",C))};function L(t){let e=0;for(let n=0;n<b.length;n++)if(e=n,b[n].title==t)return b[n]}const S=x(".projectSection");function k(t){const e=x(".sidebarProject");let n=document.createElement("span");n.textContent=t,n.classList.add("projectNameSidebar"),e.appendChild(n)}function P(t){T();const e=document.createElement("div"),n=document.createElement("ul");n.classList.add("todoUL");const c=document.createElement("input");c.type="checkbox",c.classList.add("projectCheckbox");const r=document.createElement("span");if(t.title.length>30){let e=t.title.slice(0,31);r.textContent=e+"..."}else r.textContent=t.title;r.classList.add("projectNameMain");const a=document.createElement("div"),l=document.createElement("div"),d=document.createElement("div"),u=document.createElement("div"),m=new Image;m.src=i,m.classList.add("projAdd");const p=new Image;p.src=s,p.classList.add("projEdit");const g=new Image;g.src=o,g.classList.add("projRemove"),l.appendChild(m),d.appendChild(p),u.appendChild(g),a.appendChild(l),a.appendChild(d),a.appendChild(u),a.classList.add("projectOptions"),e.appendChild(c),e.appendChild(r),e.appendChild(a),e.classList.add("project"),S.appendChild(e),S.appendChild(n),function(t){const e=t.toDoList;if(e)for(var n=0;n<e.length;n++)h(e[n])}(t),document.addEventListener("click",D)}function T(){for(document.removeEventListener("click",D);S.firstChild;)S.removeChild(S.firstChild)}let b=[];function x(t){return document.querySelector(t)}!function(){const t=document.querySelector(".menuContainer"),s=document.querySelector(".mainLogo"),c=document.querySelector(".menuClose"),r=document.querySelector(".createProj"),a=new Image;a.src=e,a.classList.add("main-menu-logo");const l=new Image;l.src=n,l.classList.add("main-logo");const d=new Image;d.src=o,d.classList.add("menuClose");const u=new Image;u.src=i,u.classList.add("addProjButton"),t.appendChild(a),s.appendChild(l),c.appendChild(d),r.appendChild(u);const m=document.querySelector(".sidebar-menu"),p=document.querySelector(".newProjectOverlay");t.addEventListener("click",(function(){m.style.animation="menuSlideOn 1.5s forwards"})),c.addEventListener("click",(function(){m.style.animation="menuSlideClose 1.5s forwards"})),r.addEventListener("click",(function(){m.style.animation="menuSlideClose 1.5s forwards",p.style.animation="projectSlideDown 1.5s forwards"})),m.addEventListener("click",(t=>{"SPAN"===t.target.tagName&&P(L(t.target.textContent))}))}(),function(){const t=document.querySelector(".closeButton"),e=document.querySelector(".submitButton");t.addEventListener("click",(function(){a.style.animation="projectSlideUp 1.5s forwards",d()})),e.addEventListener("click",(function(){a.style.animation="projectSlideUp 1.5s forwards";const t=function(){const t=document.getElementById("title").value;let e=document.getElementById("description").value;if(t){const n=new r(t,e);return b.push(n),n}return l(),d(),void(a.style.animation="projectSlideDown 1.5s forwards")}();E?(function(t){for(let e=0;e<b.length;e++)b[e].title==t&&(b[e].title=b[b.length-1].title,b[e].description=b[b.length-1].description)}(w.textContent),function(t){const e=x(".sidebarProject").children;for(let n=0;n<e.length;n++)e[n].textContent==t&&(e[n].textContent=b[e.length].title)}(w.textContent),x(".projectNameMain").textContent=b[b.length-1].title,b.splice(b.length-1,1),E=!1):(t&&(k(t.title),P(t)),d())}))}();const I=new r("defaultProject","This is a default project. You can also create your own :)");b[0]=I,P(I),k("defaultProject")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MUMsYUtpQnJCRyxFQUFJLG9CQUNaSCxZQUFjeUQsRUFBUUEsRUFBUXhILE9BQU8sR0FBR3VCLE1MaEIzQ2lHLEVBQVFwRixPQUFPb0YsRUFBUXhILE9BQU8sRUFBRSxHQUNoQ3dHLEdBQW9CLElBRWpCcUQsSUFDQ25DLEVBQW9CbUMsRUFBYXRJLE9BQ2pDc0csRUFBcUJnQyxJQUV6QnhHLElBRVIsR0FDSixDT3pCQWdILEdBQ0EsTUFBTUMsRUFBVSxJQUFJaEosRUFBUSxpQkFBa0IsOERBQzlDa0csRUFBUSxHQUFLOEMsRUFDYnpDLEVBQXFCeUMsR0FDckI1QyxFQUFvQixpQiIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW50b2RvbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9vZGludG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9vZGludG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0Ly4vc3JjL3Rhc2tDbGFzcy5qcyIsIndlYnBhY2s6Ly9vZGludG9kb2xpc3QvLi9zcmMvcHJvamVjdENsYXNzLmpzIiwid2VicGFjazovL29kaW50b2RvbGlzdC8uL3NyYy9wcm9qZWN0Rm9ybS5qcyIsIndlYnBhY2s6Ly9vZGludG9kb2xpc3QvLi9zcmMvdGFza0V2ZW50TGlzdGVuZXJzLmpzIiwid2VicGFjazovL29kaW50b2RvbGlzdC8uL3NyYy90YXNrRE9NLmpzIiwid2VicGFjazovL29kaW50b2RvbGlzdC8uL3NyYy90YXNrRm9ybS5qcyIsIndlYnBhY2s6Ly9vZGludG9kb2xpc3QvLi9zcmMvcHJvamVjdEV2ZW50TGlzdGVuZXJzLmpzIiwid2VicGFjazovL29kaW50b2RvbGlzdC8uL3NyYy9wcm9qZWN0RE9NLmpzIiwid2VicGFjazovL29kaW50b2RvbGlzdC8uL3NyYy9tZW51RXZlbnRMaXN0ZW5lcnMuanMiLCJ3ZWJwYWNrOi8vb2RpbnRvZG9saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsImV4cG9ydCBjbGFzcyBUYXNre1xuICAgIGNvbnN0cnVjdG9yKHRUaXRsZSwgdERlc2MsIHREdWUsIHRQcmlvLCB0UHJvail7XG4gICAgICAgIHRoaXMudFRpdGxlID0gdFRpdGxlO1xuICAgICAgICB0aGlzLnREZXNjID0gdERlc2M7XG4gICAgICAgIHRoaXMudER1ZSA9IHREdWU7XG4gICAgICAgIHRoaXMudFByaW8gPSB0UHJpbztcbiAgICAgICAgdGhpcy50UHJvaiA9IHRQcm9qO1xuICAgIH1cbiAgICBzZXQgdFRpdGxlKG5ld3RUaXRsZSl7XG4gICAgICAgIHRoaXMuX3RUaXRsZSA9IG5ld3RUaXRsZTtcbiAgICB9XG4gICAgc2V0IHREZXNjKG5ld3REZXNjKXtcbiAgICAgICAgdGhpcy5fdERlc2MgPSBuZXd0RGVzYztcbiAgICB9XG4gICAgc2V0IHREdWUobmV3dER1ZSl7XG4gICAgICAgIHRoaXMuX3REdWUgPSBuZXd0RHVlO1xuICAgIH1cbiAgICBzZXQgdFByaW8obmV3dFByaW8pe1xuICAgICAgICB0aGlzLl90UHJpbyA9IG5ld3RQcmlvO1xuICAgIH1cbiAgICBzZXQgdFByb2oobmV3dFByb2ope1xuICAgICAgICB0aGlzLl90UHJvaiA9IG5ld3RQcm9qO1xuICAgIH1cblxuICAgIGdldCB0VGl0bGUoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RUaXRsZTtcbiAgICB9XG4gICAgZ2V0IHREZXNjKCl7XG4gICAgICAgIHJldHVybiB0aGlzLl90RGVzYztcbiAgICB9XG4gICAgZ2V0IHREdWUoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3REdWU7XG4gICAgfVxuICAgIGdldCB0UHJpbygpe1xuICAgICAgICByZXR1cm4gdGhpcy5fdFByaW87XG4gICAgfVxuICAgIGdldCB0UHJvaigpe1xuICAgICAgICByZXR1cm4gdGhpcy5fdFByb2o7XG4gICAgfVxufSIsImltcG9ydCB7IFRhc2sgfSBmcm9tIFwiLi90YXNrQ2xhc3NcIjtcblxuZXhwb3J0IGNsYXNzIFByb2plY3R7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uKXtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMudG9Eb3MgPSBbXTtcbiAgICB9XG4gICAgbmV3VGFzayhUdGl0bGUsIFRkZXNjLCBUZHVlLCBUcHJpbywgVHByb2ope1xuICAgICAgICBsZXQgdCA9IG5ldyBUYXNrKFR0aXRsZSwgVGRlc2MsIFRkdWUsIFRwcmlvLCBUcHJvaik7XG4gICAgICAgIHRoaXMudG9Eb3MucHVzaCh0KTsvL3BsYWNlZCB1bmRlcnNjb3JlXG4gICAgICAgIHJldHVybiB0O1xuICAgIH1cblxuICAgIHJlbW92ZVRhc2tGcm9tQXJyKHRpdGxlTmFtZSl7XG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLnRvRG9zLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIGlmKHRoaXMudG9Eb3NbaV0uVHRpdGxlID09IHRpdGxlTmFtZSl7XG4gICAgICAgICAgICAgICAgdGhpcy50b0Rvcy5zcGxpY2UoaSwxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaW50VGFza3MoKXtcbiAgICAgICAgY29uc29sZS5sb2coXCJjdXJyZW50IHRhc2tzIGluIHByb2plY3Q6IFwiKTtcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMudG9Eb3MubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy50b0Rvc1tpXS50VGl0bGUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IG51bU9mVGFza3MoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9Eb3MubGVuZ3RoOy8vcGxhY2VkIHVuZGVyc2NvcmVcbiAgICB9XG5cbiAgICBnZXQgdGl0bGUoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RpdGxlO1xuICAgIH1cbiAgICBnZXQgZGVzY3JpcHRpb24oKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rlc2NyaXB0aW9uO1xuICAgIH1cbiAgICBnZXQgdG9Eb0xpc3QoKXsvL2dldCBhcnJheSB0aGVuIHB1c2ggYSB0b0RvXG4gICAgICAgIHJldHVybiB0aGlzLnRvRG9zO1xuICAgIH1cblxuICAgIHNldCB0aXRsZShuZXdUaXRsZSl7XG4gICAgICAgIHRoaXMuX3RpdGxlID0gbmV3VGl0bGU7XG4gICAgfVxuICAgIHNldCBkZXNjcmlwdGlvbihuZXdEZXNjKXtcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24gPSBuZXdEZXNjO1xuICAgIH1cblxufSIsImltcG9ydCB7IFByb2plY3QgfSBmcm9tIFwiLi9wcm9qZWN0Q2xhc3NcIjtcbmltcG9ydCB7IHByb2pBcnIgfSBmcm9tIFwiLi9tZW51RXZlbnRMaXN0ZW5lcnNcIjtcbmltcG9ydCB7IGFkZFByb2plY3RUb1NpZGViYXIsIGVkaXRQcm9qZWN0SW5TaWRlYmFyLCBkaXNwbGF5UHJvamVjdEluTWFpbiwgZWRpdFByb2plY3ROYW1lTWFpbiB9IGZyb20gXCIuL3Byb2plY3RET01cIjtcbmltcG9ydCB7IF90ZXN0ZXJpbmcsIGVkaXRCdXR0b25DbGlja2VkLCBjdXJyVGl0bGUyIH0gZnJvbSBcIi4vcHJvamVjdEV2ZW50TGlzdGVuZXJzXCI7XG5cbmNvbnN0IHByb2pPdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uZXdQcm9qZWN0T3ZlcmxheVwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHByb2plY3RPdmVybGF5U3R1ZmYoKXtcbiAgICAvL2J1dHRvbnNcbiAgICBjb25zdCBjbG9zZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2xvc2VCdXR0b25cIik7XG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdWJtaXRCdXR0b25cIik7XG5cbiAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHByb2pPdmVybGF5LnN0eWxlLmFuaW1hdGlvbiA9ICdwcm9qZWN0U2xpZGVVcCAxLjVzIGZvcndhcmRzJztcbiAgICAgICAgcHJvamVjdEZvcm1DbGVhcigpO1xuICAgIH0pXG4gICAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICAgICAgcHJvak92ZXJsYXkuc3R5bGUuYW5pbWF0aW9uID0gJ3Byb2plY3RTbGlkZVVwIDEuNXMgZm9yd2FyZHMnO1xuICAgICAgICBjb25zdCBwcm9qZWN0UGFyYW0gPSBleHRyYWN0RGF0YUZvclByb2plY3QoKTtcbiAgICAgICAgaWYoZWRpdEJ1dHRvbkNsaWNrZWQpe1xuICAgICAgICAgICAgZWRpdFByb2plY3RJbkFycihjdXJyVGl0bGUyLnRleHRDb250ZW50KTtcbiAgICAgICAgICAgIGVkaXRQcm9qZWN0SW5TaWRlYmFyKGN1cnJUaXRsZTIudGV4dENvbnRlbnQpO1xuICAgICAgICAgICAgZWRpdFByb2plY3ROYW1lTWFpbigpO1xuICAgICAgICAgICAgcHJvakFyci5zcGxpY2UocHJvakFyci5sZW5ndGgtMSwxKTsvL1JFTU9WRSBUSEUgTEFTVCBQUk9KRUNUIElOIEFSUkFZLi5OT1cgVVNFTEVTU1xuICAgICAgICAgICAgZWRpdEJ1dHRvbkNsaWNrZWQgPSBmYWxzZTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBpZihwcm9qZWN0UGFyYW0pe1xuICAgICAgICAgICAgICAgIGFkZFByb2plY3RUb1NpZGViYXIocHJvamVjdFBhcmFtLnRpdGxlKS8vdGhpcyB3aWxsIGJlIGluIHByb2plY3RET00uanMgZmlsZVxuICAgICAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0SW5NYWluKHByb2plY3RQYXJhbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcm9qZWN0Rm9ybUNsZWFyKCk7XG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5mdW5jdGlvbiBlZGl0UHJvamVjdEluQXJyKHJlcGxhY2VUaXRsZSl7XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHByb2pBcnIubGVuZ3RoOyBpKyspey8vZm9yKGxldCBpID0gMDsgaSA8IHByb2pBcnIubGVuZ3RoLTE7IGkrKyl7XG4gICAgICAgIGlmKHByb2pBcnJbaV0udGl0bGUgPT0gcmVwbGFjZVRpdGxlKXtcbiAgICAgICAgICAgIHByb2pBcnJbaV0udGl0bGUgPSBwcm9qQXJyW3Byb2pBcnIubGVuZ3RoLTFdLnRpdGxlO1xuICAgICAgICAgICAgcHJvakFycltpXS5kZXNjcmlwdGlvbiA9IHByb2pBcnJbcHJvakFyci5sZW5ndGgtMV0uZGVzY3JpcHRpb247XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3REYXRhRm9yUHJvamVjdCgpe1xuICAgIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlXG4gICAgbGV0IGRlc2NJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVzY3JpcHRpb25cIikudmFsdWU7XG5cbiAgICBpZih0aXRsZUlucHV0KXtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcImRldGVjdGVkIHRpdGxlXCIpOy8vZGVidWdnaW5nXG4gICAgICAgIGNvbnN0IHByb2plY3RNYWRlID0gbmV3IFByb2plY3QodGl0bGVJbnB1dCwgZGVzY0lucHV0KTtcbiAgICAgICAgcHJvakFyci5wdXNoKHByb2plY3RNYWRlKTtcbiAgICAgICAgcmV0dXJuIHByb2plY3RNYWRlO1xuICAgIH1lbHNle1xuICAgICAgICBkaXNwbGF5TmVlZFRpdGxlKCk7Ly8gQ0FOIElOU0VSVCBET00gTUFOSVBVTEFUSU9OIFRPIFNISUZUIERPV04gVEhFIEVSUk9SIE9WRVJMQVkgOilcbiAgICAgICAgcHJvamVjdEZvcm1DbGVhcigpO1xuICAgICAgICBwcm9qT3ZlcmxheS5zdHlsZS5hbmltYXRpb24gPSBcInByb2plY3RTbGlkZURvd24gMS41cyBmb3J3YXJkc1wiO1xuICAgICAgICByZXR1cm47XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzcGxheU5lZWRUaXRsZSgpe1xuICAgIGNvbnN0IGVycm9yT3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZXJyb3JQcm9qZWN0T3ZlcmxheVwiKTtcbiAgICBlcnJvck92ZXJsYXkuc3R5bGUuYW5pbWF0aW9uID0gXCJwcm9qZWN0U2xpZGVEb3duIDEuNXMgZm9yd2FyZHNcIlxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgZXJyb3JPdmVybGF5LnN0eWxlLmFuaW1hdGlvbiA9IFwicHJvamVjdFNsaWRlVXAgMS41cyBmb3J3YXJkc1wiXG4gICAgfSwgMjUwMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9qZWN0Rm9ybUNsZWFyKCl7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aXRsZVwiKS52YWx1ZSA9IFwiXCI7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKS52YWx1ZSA9IFwiXCI7XG59IiwiaW1wb3J0IHsgZHFzIH0gZnJvbSBcIi4vbWVudUV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBmaW5kUHJvamVjdEluQXJyIH0gZnJvbSBcIi4vcHJvamVjdEV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSBcIi4vcHJvamVjdENsYXNzXCI7XG5pbXBvcnQgeyBUYXNrIH0gZnJvbSBcIi4vdGFza0NsYXNzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB0YXNrRUxpc3RlbmVycygpe1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgX3Rhc2tUZXN0ZXJpbmcpXG59O1xubGV0IHRhc2tFZGl0QnV0dG9uID0gZmFsc2U7XG5sZXQgdGFza1JlbUJ1dHRvbiA9IGZhbHNlO1xuZXhwb3J0IHZhciBfdGFza1Rlc3RlcmluZyA9IGZ1bmN0aW9uKGUpe1xuICAgIGlmKGUudGFyZ2V0Lm1hdGNoZXMoXCIudGFza1Byb2pFZGl0XCIpKXsvL3RoaXMgd2lsbCBiZSBkb25lIGxhc3QgZmlyc3Qgd2Ugd2lsbCB3b3JrIG9uIFJFTU9WRVxuICAgICAgICB0YXNrRWRpdEJ1dHRvbiA9IHRydWU7XG4gICAgICAgIGNvbnN0IHRhc2tOYW1lID0gZS50YXJnZXQucGFyZW50RWxlbWVudC50ZXh0Q29udGVudDtcbiAgICAgICAgY29uc29sZS5sb2codGFza05hbWUpO1xuXG4gICAgICAgIC8vY29kZSBoZXJlIGZvciBlZGl0IG9uIHRhc2tcbiAgICB9XG4gICAgZWxzZSBpZihlLnRhcmdldC5tYXRjaGVzKFwiLnRhc2tQcm9qUmVtb3ZlXCIpKXtcbiAgICAgICAgdGFza1JlbUJ1dHRvbiA9IHRydWU7XG4gICAgICAgIGNvbnN0IHRhc2tOYW1lUmVtID0gZS50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQudGV4dENvbnRlbnQ7XG4gICAgICAgIGNvbnN0IHByb2pOYW1lUmVtID0gZHFzKFwiLnByb2plY3ROYW1lTWFpblwiKTtcbiAgICAgICAgY29uc29sZS5sb2codGFza05hbWVSZW0pO1xuICAgICAgICBjb25zb2xlLmxvZyhwcm9qTmFtZVJlbS50ZXh0Q29udGVudCk7XG4gICAgICAgIGNvbnN0IHByb2pSZW0gPSBmaW5kUHJvamVjdEluQXJyKHByb2pOYW1lUmVtKTsvL3Byb2plY3QgY2xhc3Mgd2lsbCBoYXZlIGEgZnVuYyB0aGF0IGNhbiBnbyB0aHJvdWdoIGl0cyB0YXNrIGFycmF5IGFuZCByZW1vdmUgYSBzcGVjaWZpZWQgdGFzayA6KVxuICAgICAgICBwcm9qUmVtLnJlbW92ZVRhc2tGcm9tQXJyKHRhc2tOYW1lUmVtKTtcbiAgICAgICAgcHJvalJlbS5wcmludFRhc2tzKCk7XG4gICAgICAgIC8vY29kZSBoZXJlIGZvciByZW1vdmFsIG9mIGluZGl2aWR1YWwgdGFza1xuICAgIH1cbn0iLCJpbXBvcnQgRWRpdCBmcm9tICcuLi9zcmMvaW1ncy9lZGl0LnBuZyc7XG5pbXBvcnQgUmVtb3ZlIGZyb20gJy4uL3NyYy9pbWdzL2Nsb3NlLnBuZyc7XG5pbXBvcnQgeyB0YXNrRUxpc3RlbmVycyB9IGZyb20gJy4vdGFza0V2ZW50TGlzdGVuZXJzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlUYXNrSW5NYWluKHRhc2spey8vKHByb2plY3QsIHVsKSBtaWdodCBiZSBuZWVkZWQgYXMgcGFyYW1zIGJ1dCBwcm9icyBub3RcbiAgICBjb25zdCBwcm9qVUwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvZG9VTFwiKTtcblxuICAgIGNvbnN0IHRhc2tMSSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG5cbiAgICBjb25zdCBkYXRlRGlzcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRhdGVEaXNwLnRleHRDb250ZW50ID0gdGFzay50RHVlO1xuICAgIGRhdGVEaXNwLmNsYXNzTGlzdC5hZGQoXCJkYXRlVGFza0Rpc3BcIik7XG5cbiAgICBjb25zdCBidXR0b25EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgIGNvbnN0IHRhc2tDaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgdGFza0NoZWNrYm94LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cbiAgICBjb25zdCB0YXNrRGF0ZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrRGF0ZUlucHV0LnR5cGUgPSBcImRhdGVcIjtcbiAgICB0YXNrRGF0ZUlucHV0LnZhbHVlID0gdGFzay50RHVlO1xuXG4gICAgY29uc3QgdGFza0VkaXREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCB0YXNrUmVtb3ZlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBjb25zdCB0YXNrRWRpdEljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICB0YXNrRWRpdEljb24uc3JjID0gRWRpdDtcbiAgICB0YXNrRWRpdEljb24uY2xhc3NMaXN0LmFkZCgndGFza1Byb2pFZGl0Jyk7XG5cbiAgICBjb25zdCB0YXNrUmVtb3ZlSWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIHRhc2tSZW1vdmVJY29uLnNyYyA9IFJlbW92ZTtcbiAgICB0YXNrUmVtb3ZlSWNvbi5jbGFzc0xpc3QuYWRkKCd0YXNrUHJvalJlbW92ZScpO1xuXG4gICAgdGFza0VkaXREaXYuYXBwZW5kQ2hpbGQodGFza0VkaXRJY29uKTtcbiAgICB0YXNrUmVtb3ZlRGl2LmFwcGVuZENoaWxkKHRhc2tSZW1vdmVJY29uKTtcblxuICAgIHRhc2tMSS50ZXh0Q29udGVudCA9IHRhc2sudFRpdGxlOy8vdGFzay50VGl0bGUgKyBcIiAgXCIgKyB0YXNrLnREdWVcblxuICAgIGJ1dHRvbkRpdi5hcHBlbmRDaGlsZCh0YXNrRWRpdERpdik7XG4gICAgYnV0dG9uRGl2LmFwcGVuZENoaWxkKHRhc2tSZW1vdmVEaXYpO1xuICAgIGJ1dHRvbkRpdi5hcHBlbmRDaGlsZCh0YXNrQ2hlY2tib3gpO1xuXG4gICAgYnV0dG9uRGl2LmNsYXNzTGlzdC5hZGQoJ3Rhc2tCdXR0b25zJyk7XG5cbiAgICAvL3Rhc2tMSS5hcHBlbmRDaGlsZChkYXRlRGlzcCk7XG5cbiAgICB0YXNrTEkuYXBwZW5kQ2hpbGQoYnV0dG9uRGl2KTtcblxuICAgIHRhc2tMSS5hcHBlbmRDaGlsZCh0YXNrRGF0ZUlucHV0KTtcblxuICAgIHRhc2tMSS5jbGFzc0xpc3QuYWRkKFwidG9kb1wiKTtcblxuICAgIHByb2pVTC5hcHBlbmRDaGlsZCh0YXNrTEkpO1xuXG4gICAgdGFza0VMaXN0ZW5lcnMoKTtcbn0iLCJpbXBvcnQgeyBkcXMgfSBmcm9tIFwiLi9tZW51RXZlbnRMaXN0ZW5lcnNcIjtcbmltcG9ydCB7IGZpbmRQcm9qZWN0SW5BcnIgfSBmcm9tIFwiLi9wcm9qZWN0RXZlbnRMaXN0ZW5lcnNcIjtcbmltcG9ydCB7IGRpc3BsYXlOZWVkVGl0bGUgfSBmcm9tIFwiLi9wcm9qZWN0Rm9ybVwiO1xuaW1wb3J0IHsgZGlzcGxheVRhc2tJbk1haW4gfSBmcm9tIFwiLi90YXNrRE9NXCI7XG5cbmV4cG9ydCBjb25zdCB0YXNrT3ZlcmxheSA9IGRxcyhcIi5uZXdUYXNrT3ZlcmxheVwiKTtcbmNvbnN0IHRhc2tDbG9zZSA9IGRxcyhcIi50YXNrQ2xvc2VCdXR0b25cIik7XG5jb25zdCB0YXNrU3VibWl0ID0gZHFzKFwiLnRhc2tTdWJtaXRCdXR0b25cIik7XG5cbmV4cG9ydCBmdW5jdGlvbiB0YXNrT3ZlcmxheUxpc3RlbmVycygpe1xuICAgIHRhc2tDbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHRhc2tGb3JtQ2xlYXIoKTtcbiAgICAgICAgdGFza092ZXJsYXkuc3R5bGUuYW5pbWF0aW9uID0gXCJwcm9qZWN0U2xpZGVVcCAxLjVzIGZvcndhcmRzXCJcbiAgICB9KTtcbiAgICB0YXNrU3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgX3Rhc2tTdWJtaXQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gX3Rhc2tTdWJtaXQoKXtcbiAgICB0YXNrT3ZlcmxheS5zdHlsZS5hbmltYXRpb24gPSBcInByb2plY3RTbGlkZVVwIDEuNXMgZm9yd2FyZHNcIlxuICAgIGNvbnN0IG1hZGVUYXNrID0gZXh0cmFjdERhdGFGb3JUYXNrKCk7XG4gICAgaWYobWFkZVRhc2spe1xuICAgICAgICBkaXNwbGF5VGFza0luTWFpbihtYWRlVGFzayk7Ly9jdXJyZW50IHByb2plY3QgaXMgYWxyZWFkeSBkZXRlY3RlZCBpbiBleHRyYWN0RGF0YUZvclRhc2sgZnVuYy4ubWF5IG5vdCBuZWVkIHByb2ogYW5kIHVsIGFzIHBhcmFtc1xuICAgIH1cbiAgICB0YXNrRm9ybUNsZWFyKCk7XG4gICAgY2xlYXJFdkxpcygpO1xufVxuXG5mdW5jdGlvbiBjbGVhckV2TGlzKCl7XG4gICAgdGFza1N1Ym1pdC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIF90YXNrU3VibWl0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3REYXRhRm9yVGFzayhwcm9qKXtcbiAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRUaXRsZVwiKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrRGVzYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidERlc2NyaXB0aW9uXCIpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tEdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0RHVlRGF0ZVwiKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrUHJpbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidFRhc2tQcmlvXCIpLnZhbHVlO1xuICAgIFxuICAgIGNvbnN0IHRlbXAgPSBkcXMoXCIucHJvamVjdE5hbWVNYWluXCIpOy8vU0hPVUxEIE5PVCBCRSBORUVERUQgR0lWRU4gUEFSQU1cbiAgICBjb25zdCB0YXNrUHJvaiA9IHRlbXAudGV4dENvbnRlbnQ7XG5cbiAgICBjb25zdCBmbmRQcm9qID0gZmluZFByb2plY3RJbkFycih0YXNrUHJvaik7XG5cblxuICAgIGlmKHRhc2tUaXRsZSAmJiB0YXNrRHVlRGF0ZSl7XG4gICAgICAgIGNvbnN0IHRhc2tNYWRlID0gZm5kUHJvai5uZXdUYXNrKHRhc2tUaXRsZSwgdGFza0Rlc2MsIHRhc2tEdWVEYXRlLCB0YXNrUHJpbywgZm5kUHJvai50aXRsZSk7XG4gICAgICAgIHRhc2tGb3JtQ2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHRhc2tNYWRlO1xuICAgIH1lbHNle1xuICAgICAgICBkaXNwbGF5TmVlZFRpdGxlKCk7XG4gICAgICAgIHRhc2tGb3JtQ2xlYXIoKTtcbiAgICAgICAgdGFza092ZXJsYXkuc3R5bGUuYW5pbWF0aW9uID0gXCJwcm9qZWN0U2xpZGVEb3duIDEuNXMgZm9yd2FyZHNcIjtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRhc2tGb3JtQ2xlYXIoKXtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRUaXRsZVwiKS52YWx1ZSA9IFwiXCI7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0RGVzY3JpcHRpb25cIikudmFsdWUgPSBcIlwiO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidER1ZURhdGVcIikudmFsdWUgPSBcIlwiO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidFRhc2tQcmlvXCIpLnZhbHVlID0gXCJTZWxlY3QgT25lXCI7XG59IiwiaW1wb3J0IHsgZHFzIH0gZnJvbSBcIi4vbWVudUV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBwcm9qQXJyIH0gZnJvbSBcIi4vbWVudUV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBjbGVhck1haW4gfSBmcm9tIFwiLi9wcm9qZWN0RE9NXCI7XG5pbXBvcnQgeyB0YXNrT3ZlcmxheSwgdGFza092ZXJsYXlMaXN0ZW5lcnMgfSBmcm9tIFwiLi90YXNrRm9ybVwiO1xuaW1wb3J0IHsgcmVtb3ZlUHJvamVjdEZyb21TaWRlYmFyIH0gZnJvbSBcIi4vcHJvamVjdERPTVwiO1xuXG5jb25zdCBwcm9qT3ZlcmxheTEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ld1Byb2plY3RPdmVybGF5XCIpO1xuZXhwb3J0IGxldCBlZGl0QnV0dG9uQ2xpY2tlZCA9IGZhbHNlO1xuZXhwb3J0IGxldCBjdXJyVGl0bGUyID0gbnVsbDsvLz0gZHFzKFwiLnByb2plY3ROYW1lTWFpblwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHByb2plY3RFTGlzdGVuZXJzKCl7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBfdGVzdGVyaW5nKVxufTtcblxuZXhwb3J0IHZhciBfdGVzdGVyaW5nID0gZnVuY3Rpb24oZSl7XG4gICAgLy9nbyB0aHJvdWhnIGFycmF5IGNvbXBhcmluZyB0aXRsZVxuICAgICAgICAvL3doZW4gZm91bmQgZmlsbCBwcm9qZWN0Rm9ybSBhbmQgZHJvcCBmb3JtIGRvd24gZm9yIHVzZXJcbiAgICAgICAgLy9pZiBzdWJtaXQgdGhlbiByZXBsYWNlIGluZm8gd2l0aCBuZXcgaW5mb1xuICAgICAgICAvL2Vsc2UgaWYgY2FuY2VsIHRoZW4gbGVhdmUgcHJvamVjdCBhcyBpdCB3YXNcbiAgICAgICAgY29uc3QgZWRpdEJ1dHRvbiA9IGUudGFyZ2V0Lm1hdGNoZXMoXCIucHJvakVkaXRcIik7XG4gICAgICAgIGNvbnN0IHJlbW92ZUJ1dHRvbiA9IGUudGFyZ2V0Lm1hdGNoZXMoXCIucHJvalJlbW92ZVwiKTtcbiAgICAgICAgY29uc3QgYWRkVGFza0J1dHRvbiA9IGUudGFyZ2V0Lm1hdGNoZXMoXCIucHJvakFkZFwiKTtcbiAgICAgICAgY29uc3QgY3VyclRpdGxlID0gZHFzKFwiLnByb2plY3ROYW1lTWFpblwiKTtcbiAgICAgICAgY3VyclRpdGxlMiA9IGN1cnJUaXRsZTtcbiAgICAgICAgaWYoZWRpdEJ1dHRvbil7Ly90aGlzIHdpbGwgYmUgZG9uZSBvbmNlICdyZW1vdmUnIGlzIGNvbXBsZXRlZFxuICAgICAgICAgICAgZWRpdEZvcm0oY3VyclRpdGxlLnRleHRDb250ZW50KTtcbiAgICAgICAgICAgIGVkaXRCdXR0b25DbGlja2VkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKHJlbW92ZUJ1dHRvbil7XG4gICAgICAgICAgICAvL2NvbnN0IGN1cnJUaXRsZSA9IGRxcyhcIi5wcm9qZWN0TmFtZU1haW5cIik7XG4gICAgICAgICAgICByZW1vdmVQcm9qZWN0RnJvbVNpZGViYXIoY3VyclRpdGxlLnRleHRDb250ZW50KTtcbiAgICAgICAgICAgIHJlbW92ZVByb2pBcnIoY3VyclRpdGxlLnRleHRDb250ZW50KTsvLz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/XG4gICAgICAgICAgICBjbGVhck1haW4oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKGFkZFRhc2tCdXR0b24pe1xuICAgICAgICAgICAgdGFza092ZXJsYXkuc3R5bGUuYW5pbWF0aW9uID0gXCJwcm9qZWN0U2xpZGVEb3duIDEuNXMgZm9yd2FyZHNcIjtcbiAgICAgICAgICAgIHRhc2tPdmVybGF5TGlzdGVuZXJzKCk7Ly9hZGQgcHJvaiBhcyBwYXJhbSBoZXJlISEhIGZpbmQgcHJvaiBvbiBsaW5lIGJlZm9yZSB0aGlzXG4gICAgICAgIH1cbn1cblxuZnVuY3Rpb24gZWRpdEZvcm0ocHJvamVjdFRpdGxlKXsvL3BhcmFtIGlzIGN1cnJlbnQgdGl0bGUgaXQgd2lsbCBmaWxsIHRoZSBpbnB1dCB0aXRsZSBib3hcbiAgICBwcm9qT3ZlcmxheTEuc3R5bGUuYW5pbWF0aW9uID0gJ3Byb2plY3RTbGlkZURvd24gMS41cyBmb3J3YXJkcyc7XG4gICAgY29uc3QgdGl0bGVJbiA9IGRxcyhcIiN0aXRsZVwiKTtcbiAgICB0aXRsZUluLnZhbHVlID0gcHJvamVjdFRpdGxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZFByb2plY3RJbkFycih0aXRsZSl7Ly9NSUdIVCBOT1QgTkVFRCBUSElTIE1JR0hUIE5PVCBORUVEIFRISVMgTUlHSFQgTk9UIE5FRUQgVEhJU1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHByb2pBcnIubGVuZ3RoOyBpKyspe1xuICAgICAgICBpbmRleCA9IGk7XG4gICAgICAgIGlmKHByb2pBcnJbaV0udGl0bGUgPT0gdGl0bGUpe1xuICAgICAgICAgICAgcmV0dXJuIHByb2pBcnJbaV07XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IFJlbW92ZSBmcm9tICcuLi9zcmMvaW1ncy9jbG9zZS5wbmcnO1xuaW1wb3J0IENyZWF0ZSBmcm9tICcuLi9zcmMvaW1ncy9hZGQucG5nJztcbmltcG9ydCBFZGl0IGZyb20gJy4uL3NyYy9pbWdzL2VkaXQucG5nJztcbmltcG9ydCB7IGRxcywgcHJvakFyciB9IGZyb20gJy4vbWVudUV2ZW50TGlzdGVuZXJzJztcbmltcG9ydCB7IHByb2plY3RFTGlzdGVuZXJzIH0gZnJvbSAnLi9wcm9qZWN0RXZlbnRMaXN0ZW5lcnMnO1xuaW1wb3J0IHsgX3Rlc3RlcmluZyB9IGZyb20gJy4vcHJvamVjdEV2ZW50TGlzdGVuZXJzJztcbmltcG9ydCB7IGRpc3BsYXlUYXNrSW5NYWluIH0gZnJvbSAnLi90YXNrRE9NJztcblxuY29uc3QgbWFpblNlYyA9IGRxcyhcIi5wcm9qZWN0U2VjdGlvblwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFByb2plY3RUb1NpZGViYXIocHJvamVjdFRpdGxlKXtcbiAgICBjb25zdCBwcm9qU2lkZSA9IGRxcyhcIi5zaWRlYmFyUHJvamVjdFwiKTtcbiAgICBsZXQgcHJvalRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIHByb2pUaXRsZS50ZXh0Q29udGVudCA9IHByb2plY3RUaXRsZTtcbiAgICBwcm9qVGl0bGUuY2xhc3NMaXN0LmFkZCgncHJvamVjdE5hbWVTaWRlYmFyJyk7XG4gICAgcHJvalNpZGUuYXBwZW5kQ2hpbGQocHJvalRpdGxlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVQcm9qZWN0RnJvbVNpZGViYXIocHJvamVjdFRpdGxlKXtcbiAgICBjb25zdCBzaWRlYmFyUHJvaiA9IGRxcyhcIi5zaWRlYmFyUHJvamVjdFwiKTtcbiAgICBjb25zdCBzaWRlYmFyUHJvakNoaWxkcmVuID0gc2lkZWJhclByb2ouY2hpbGRyZW47XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHNpZGViYXJQcm9qQ2hpbGRyZW4ubGVuZ3RoOyBpKyspe1xuICAgICAgICBpZihzaWRlYmFyUHJvakNoaWxkcmVuW2ldLnRleHRDb250ZW50ID09IHByb2plY3RUaXRsZSl7XG4gICAgICAgICAgICBzaWRlYmFyUHJvai5yZW1vdmVDaGlsZChzaWRlYmFyUHJvakNoaWxkcmVuW2ldKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBlZGl0UHJvamVjdEluU2lkZWJhcihwcm9qZWN0VGl0bGUpe1xuICAgIGNvbnN0IHNpZGViYXJQcm9qID0gZHFzKFwiLnNpZGViYXJQcm9qZWN0XCIpO1xuICAgIGNvbnN0IHNpZGViYXJQcm9qQ2hpbGRyZW4gPSBzaWRlYmFyUHJvai5jaGlsZHJlbjtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgc2lkZWJhclByb2pDaGlsZHJlbi5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGlmKHNpZGViYXJQcm9qQ2hpbGRyZW5baV0udGV4dENvbnRlbnQgPT0gcHJvamVjdFRpdGxlKXtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJmb3VuZCBzaWRlYmFyIHByb2plY3QgbmFtZWQgXCIgKyBzaWRlYmFyUHJvakNoaWxkcmVuW2ldLnRleHRDb250ZW50KTsgREVCVUdcbiAgICAgICAgICAgIHNpZGViYXJQcm9qQ2hpbGRyZW5baV0udGV4dENvbnRlbnQgPSBwcm9qQXJyW3NpZGViYXJQcm9qQ2hpbGRyZW4ubGVuZ3RoXS50aXRsZTsvL3Byb2pBcnJbc2lkZWJhclByb2pDaGlsZHJlbi5sZW5ndGgtMV0udGl0bGVcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVkaXRQcm9qZWN0TmFtZU1haW4oKXtcbiAgICBjb25zdCBPR1Byb2pOYW1lID0gZHFzKFwiLnByb2plY3ROYW1lTWFpblwiKTtcbiAgICBPR1Byb2pOYW1lLnRleHRDb250ZW50ID0gcHJvakFycltwcm9qQXJyLmxlbmd0aC0xXS50aXRsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlQcm9qZWN0SW5NYWluKHByb2plY3Qpe1xuICAgIGNsZWFyTWFpbigpO1xuICAgIGNvbnN0IHByb2pEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgIGNvbnN0IHRhc2tTZWNVTCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gICAgdGFza1NlY1VMLmNsYXNzTGlzdC5hZGQoXCJ0b2RvVUxcIilcbiAgICBcbiAgICBjb25zdCBwcm9qQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHByb2pDaGVja2JveC50eXBlID0gXCJjaGVja2JveFwiO1xuICAgIHByb2pDaGVja2JveC5jbGFzc0xpc3QuYWRkKFwicHJvamVjdENoZWNrYm94XCIpO1xuXG4gICAgXG4gICAgY29uc3QgcHJvak5hbWVTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGlmKHByb2plY3QudGl0bGUubGVuZ3RoID4gMzApe1xuICAgICAgICBsZXQgbWFpbk1vZFByb2pUaXRsZSA9IHByb2plY3QudGl0bGUuc2xpY2UoMCwzMSk7XG4gICAgICAgIHByb2pOYW1lU3Bhbi50ZXh0Q29udGVudCA9IG1haW5Nb2RQcm9qVGl0bGUgKyBcIi4uLlwiO1xuICAgIH1lbHNle1xuICAgICAgICBwcm9qTmFtZVNwYW4udGV4dENvbnRlbnQgPSBwcm9qZWN0LnRpdGxlO1xuICAgIH1cbiAgICBwcm9qTmFtZVNwYW4uY2xhc3NMaXN0LmFkZChcInByb2plY3ROYW1lTWFpblwiKTtcblxuICAgIFxuICAgIGNvbnN0IGJ1dHRvbkNvbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBcbiAgICBjb25zdCBhZGREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBlZGl0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgcmVtb3ZlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBjb25zdCBhZGRJY29uID0gbmV3IEltYWdlKCk7XG4gICAgYWRkSWNvbi5zcmMgPSBDcmVhdGU7XG4gICAgYWRkSWNvbi5jbGFzc0xpc3QuYWRkKCdwcm9qQWRkJyk7XG5cbiAgICBjb25zdCBlZGl0SWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGVkaXRJY29uLnNyYyA9IEVkaXQ7XG4gICAgZWRpdEljb24uY2xhc3NMaXN0LmFkZCgncHJvakVkaXQnKTtcblxuICAgIGNvbnN0IHJlbUljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICByZW1JY29uLnNyYyA9IFJlbW92ZTtcbiAgICByZW1JY29uLmNsYXNzTGlzdC5hZGQoJ3Byb2pSZW1vdmUnKTtcblxuICAgIGFkZERpdi5hcHBlbmRDaGlsZChhZGRJY29uKTtcbiAgICBlZGl0RGl2LmFwcGVuZENoaWxkKGVkaXRJY29uKTtcbiAgICByZW1vdmVEaXYuYXBwZW5kQ2hpbGQocmVtSWNvbik7XG4gICAgXG4gICAgYnV0dG9uQ29udC5hcHBlbmRDaGlsZChhZGREaXYpO1xuICAgIGJ1dHRvbkNvbnQuYXBwZW5kQ2hpbGQoZWRpdERpdik7XG4gICAgYnV0dG9uQ29udC5hcHBlbmRDaGlsZChyZW1vdmVEaXYpO1xuICAgIGJ1dHRvbkNvbnQuY2xhc3NMaXN0LmFkZChcInByb2plY3RPcHRpb25zXCIpO1xuXG4gICAgcHJvakRpdi5hcHBlbmRDaGlsZChwcm9qQ2hlY2tib3gpO1xuICAgIHByb2pEaXYuYXBwZW5kQ2hpbGQocHJvak5hbWVTcGFuKTtcbiAgICBwcm9qRGl2LmFwcGVuZENoaWxkKGJ1dHRvbkNvbnQpO1xuICAgIHByb2pEaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XG5cbiAgICBtYWluU2VjLmFwcGVuZENoaWxkKHByb2pEaXYpO1xuICAgIG1haW5TZWMuYXBwZW5kQ2hpbGQodGFza1NlY1VMKTtcbiAgICBcbiAgICAvL2NoZWNrIGZvciB0YXNrcyB3aXRoIGEgbG9vcCBhbmQgZGlzcGxheSBlYWNoXG4gICAgY2hlY2tGb3JUYXNrcyhwcm9qZWN0KTtcblxuICAgIC8vY2FsbCBldmVudExpc3RlbmVyIGhlcmVcbiAgICBwcm9qZWN0RUxpc3RlbmVycygpOy8vV0lMTCBIQVZFIFRPIEFERCBFVkVOVCBMSVNURU5FUlMgRk9SIFRBU0tTIEhFUkU/Pz9cbn1cblxuZnVuY3Rpb24gY2hlY2tGb3JUYXNrcyhwcm9qKXtcbiAgICAvL2dpdmVuIHByb2ogYXMgcGFyYW0gd2Ugd2lsbCBjaGVjayBpZiBpdCBjb250YWlucyBhbnkgdGFza3MgdGhhdCBuZWVkIHRvIGJlIGNyZWF0ZWRcbiAgICBjb25zdCB0YXNrQXJyID0gcHJvai50b0RvTGlzdDtcbiAgICBpZih0YXNrQXJyKXtcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHRhc2tBcnIubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgZGlzcGxheVRhc2tJbk1haW4odGFza0FycltpXSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhck1haW4oKXtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIF90ZXN0ZXJpbmcpO1xuICAgIHdoaWxlKG1haW5TZWMuZmlyc3RDaGlsZCl7XG4gICAgICAgIG1haW5TZWMucmVtb3ZlQ2hpbGQobWFpblNlYy5maXJzdENoaWxkKVxuICAgIH1cbn0iLCJpbXBvcnQgTWVudSBmcm9tICcuLi9zcmMvaW1ncy9tZW51LnBuZydcbmltcG9ydCBCcmFuZCBmcm9tICcuLi9zcmMvaW1ncy9Xb3JrZXJBbnRzTW9kLnBuZyc7XG5pbXBvcnQgQ2xvc2UgZnJvbSAnLi4vc3JjL2ltZ3MvY2xvc2UucG5nJztcbmltcG9ydCBDcmVhdGUgZnJvbSAnLi4vc3JjL2ltZ3MvYWRkLnBuZyc7XG5pbXBvcnQgeyBkaXNwbGF5UHJvamVjdEluTWFpbiB9IGZyb20gJy4vcHJvamVjdERPTSc7XG5pbXBvcnQgeyBmaW5kUHJvamVjdEluQXJyIH0gZnJvbSAnLi9wcm9qZWN0RXZlbnRMaXN0ZW5lcnMnO1xuXG4vL0kgTkVFRCBUTyBBREQgQSBHTE9CQUwgVkFSSUFCTEUgQVJSQVkgVEhBVCBTVE9SRVMgQUxMIFRIRSBQUk9KRUNUUyBIRVJFXG5leHBvcnQgbGV0IHByb2pBcnIgPSBbXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRxcyhjKXtcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lbnVFdmVudExpc3Rlbigpe1xuICAgIGNvbnN0IG1lbnVDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1lbnVDb250YWluZXJcIik7XG4gICAgY29uc3QgbWFpbkxvZ29Db250ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluTG9nb1wiKTtcbiAgICBjb25zdCBjbG9zZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVudUNsb3NlXCIpO1xuICAgIGNvbnN0IGNyZWF0ZVByb2pDb250ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jcmVhdGVQcm9qXCIpO1xuICAgIFxuICAgIGNvbnN0IG1lbnVJY29uID0gbmV3IEltYWdlKCk7XG4gICAgbWVudUljb24uc3JjID0gTWVudTtcbiAgICBtZW51SWNvbi5jbGFzc0xpc3QuYWRkKCdtYWluLW1lbnUtbG9nbycpO1xuXG4gICAgY29uc3QgbWFpbkxvZ29JbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICBtYWluTG9nb0ltZy5zcmMgPSBCcmFuZDtcbiAgICBtYWluTG9nb0ltZy5jbGFzc0xpc3QuYWRkKCdtYWluLWxvZ28nKTtcblxuICAgIGNvbnN0IGNsb3NlSWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGNsb3NlSWNvbi5zcmMgPSBDbG9zZTtcbiAgICBjbG9zZUljb24uY2xhc3NMaXN0LmFkZCgnbWVudUNsb3NlJyk7XG5cbiAgICBjb25zdCBjcmVhdGVQcm9qSWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGNyZWF0ZVByb2pJY29uLnNyYyA9IENyZWF0ZTtcbiAgICBjcmVhdGVQcm9qSWNvbi5jbGFzc0xpc3QuYWRkKCdhZGRQcm9qQnV0dG9uJyk7XG5cbiAgICBtZW51Q29udGFpbmVyLmFwcGVuZENoaWxkKG1lbnVJY29uKTtcbiAgICBtYWluTG9nb0NvbnQuYXBwZW5kQ2hpbGQobWFpbkxvZ29JbWcpO1xuICAgIGNsb3NlQ29udGFpbmVyLmFwcGVuZENoaWxkKGNsb3NlSWNvbik7XG4gICAgY3JlYXRlUHJvakNvbnQuYXBwZW5kQ2hpbGQoY3JlYXRlUHJvakljb24pO1xuXG4gICAgY29uc3Qgc2lkZUJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2lkZWJhci1tZW51XCIpO1xuICAgIGNvbnN0IHByb2pPdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uZXdQcm9qZWN0T3ZlcmxheVwiKTtcblxuICAgIG1lbnVDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpe1xuICAgICAgICBzaWRlQmFyLnN0eWxlLmFuaW1hdGlvbiA9ICdtZW51U2xpZGVPbiAxLjVzIGZvcndhcmRzJztcbiAgICB9KTtcbiAgICBjbG9zZUNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHNpZGVCYXIuc3R5bGUuYW5pbWF0aW9uID0gJ21lbnVTbGlkZUNsb3NlIDEuNXMgZm9yd2FyZHMnO1xuICAgIH0pO1xuICAgIGNyZWF0ZVByb2pDb250LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICAgICAgc2lkZUJhci5zdHlsZS5hbmltYXRpb24gPSAnbWVudVNsaWRlQ2xvc2UgMS41cyBmb3J3YXJkcyc7XG4gICAgICAgIHByb2pPdmVybGF5LnN0eWxlLmFuaW1hdGlvbiA9ICdwcm9qZWN0U2xpZGVEb3duIDEuNXMgZm9yd2FyZHMnO1xuICAgIH0pO1xuICAgIHNpZGVCYXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICBpZihlLnRhcmdldC50YWdOYW1lID09PSAnU1BBTicpe1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJ0aGUgZm9sbG93aW5nIGlzIGUudGFyZ2V0LnZhbHVlXCIpO0RFQlVHREVCVUdERUJVR1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZS50YXJnZXQudGV4dENvbnRlbnQpO1xuICAgICAgICAgICAgY29uc3QgZGlzcFByb2ogPSBmaW5kUHJvamVjdEluQXJyKGUudGFyZ2V0LnRleHRDb250ZW50KVxuICAgICAgICAgICAgZGlzcGxheVByb2plY3RJbk1haW4oZGlzcFByb2opO1xuICAgICAgICB9XG4gICAgfSk7XG59IiwiaW1wb3J0IHsgbWVudUV2ZW50TGlzdGVuLCBwcm9qQXJyIH0gZnJvbSBcIi4vbWVudUV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBhZGRQcm9qZWN0VG9TaWRlYmFyLCBkaXNwbGF5UHJvamVjdEluTWFpbiB9IGZyb20gXCIuL3Byb2plY3RET01cIjtcbmltcG9ydCB7IHByb2plY3RPdmVybGF5U3R1ZmYgfSBmcm9tIFwiLi9wcm9qZWN0Rm9ybVwiO1xuaW1wb3J0IHsgdGFza092ZXJsYXlMaXN0ZW5lcnMsIF90YXNrU3VibWl0IH0gZnJvbSBcIi4vdGFza0Zvcm1cIjtcbmltcG9ydCB7IHByb2plY3RFTGlzdGVuZXJzIH0gZnJvbSBcIi4vcHJvamVjdEV2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSBcIi4vcHJvamVjdENsYXNzXCI7XG5cbm1lbnVFdmVudExpc3RlbigpO1xucHJvamVjdE92ZXJsYXlTdHVmZigpO1xuY29uc3QgZGVmUHJvaiA9IG5ldyBQcm9qZWN0KFwiZGVmYXVsdFByb2plY3RcIiwgXCJUaGlzIGlzIGEgZGVmYXVsdCBwcm9qZWN0LiBZb3UgY2FuIGFsc28gY3JlYXRlIHlvdXIgb3duIDopXCIpO1xucHJvakFyclswXSA9IGRlZlByb2o7XG5kaXNwbGF5UHJvamVjdEluTWFpbihkZWZQcm9qKTtcbmFkZFByb2plY3RUb1NpZGViYXIoXCJkZWZhdWx0UHJvamVjdFwiKTtcbi8vcHJvamVjdEVMaXN0ZW5lcnMoKTsvL1RISVMgV0FTIENPTU1FTlRFRCBPVVRcbi8vdGFza092ZXJsYXlMaXN0ZW5lcnMoKTsvL1RISVMgV0FTIENPTU1FTlRFRCBPVVQiXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImRvY3VtZW50IiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImxlbmd0aCIsImkiLCJFcnJvciIsInJlcGxhY2UiLCJwIiwiVGFzayIsImNvbnN0cnVjdG9yIiwidFRpdGxlIiwidERlc2MiLCJ0RHVlIiwidFByaW8iLCJ0UHJvaiIsIm5ld3RUaXRsZSIsIl90VGl0bGUiLCJuZXd0RGVzYyIsIl90RGVzYyIsIm5ld3REdWUiLCJfdER1ZSIsIm5ld3RQcmlvIiwiX3RQcmlvIiwibmV3dFByb2oiLCJfdFByb2oiLCJQcm9qZWN0IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInRvRG9zIiwibmV3VGFzayIsIlR0aXRsZSIsIlRkZXNjIiwiVGR1ZSIsIlRwcmlvIiwiVHByb2oiLCJ0IiwicHVzaCIsInJlbW92ZVRhc2tGcm9tQXJyIiwidGl0bGVOYW1lIiwic3BsaWNlIiwicHJpbnRUYXNrcyIsImNvbnNvbGUiLCJsb2ciLCJudW1PZlRhc2tzIiwiX3RpdGxlIiwiX2Rlc2NyaXB0aW9uIiwidG9Eb0xpc3QiLCJuZXdUaXRsZSIsIm5ld0Rlc2MiLCJwcm9qT3ZlcmxheSIsInF1ZXJ5U2VsZWN0b3IiLCJkaXNwbGF5TmVlZFRpdGxlIiwiZXJyb3JPdmVybGF5Iiwic3R5bGUiLCJhbmltYXRpb24iLCJzZXRUaW1lb3V0IiwicHJvamVjdEZvcm1DbGVhciIsImdldEVsZW1lbnRCeUlkIiwidmFsdWUiLCJ0YXNrRWRpdEJ1dHRvbiIsInRhc2tSZW1CdXR0b24iLCJfdGFza1Rlc3RlcmluZyIsInRhcmdldCIsIm1hdGNoZXMiLCJ0YXNrTmFtZSIsInBhcmVudEVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsInRhc2tOYW1lUmVtIiwicHJvak5hbWVSZW0iLCJkcXMiLCJwcm9qUmVtIiwiZmluZFByb2plY3RJbkFyciIsImRpc3BsYXlUYXNrSW5NYWluIiwidGFzayIsInByb2pVTCIsInRhc2tMSSIsImNyZWF0ZUVsZW1lbnQiLCJkYXRlRGlzcCIsImNsYXNzTGlzdCIsImFkZCIsImJ1dHRvbkRpdiIsInRhc2tDaGVja2JveCIsInR5cGUiLCJ0YXNrRGF0ZUlucHV0IiwidGFza0VkaXREaXYiLCJ0YXNrUmVtb3ZlRGl2IiwidGFza0VkaXRJY29uIiwiSW1hZ2UiLCJ0YXNrUmVtb3ZlSWNvbiIsImFwcGVuZENoaWxkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRhc2tPdmVybGF5IiwidGFza0Nsb3NlIiwidGFza1N1Ym1pdCIsIl90YXNrU3VibWl0IiwibWFkZVRhc2siLCJwcm9qIiwidGFza1RpdGxlIiwidGFza0Rlc2MiLCJ0YXNrRHVlRGF0ZSIsInRhc2tQcmlvIiwiZm5kUHJvaiIsInRhc2tNYWRlIiwidGFza0Zvcm1DbGVhciIsImV4dHJhY3REYXRhRm9yVGFzayIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJwcm9qT3ZlcmxheTEiLCJlZGl0QnV0dG9uQ2xpY2tlZCIsImN1cnJUaXRsZTIiLCJfdGVzdGVyaW5nIiwiZWRpdEJ1dHRvbiIsInJlbW92ZUJ1dHRvbiIsImFkZFRhc2tCdXR0b24iLCJjdXJyVGl0bGUiLCJwcm9qZWN0VGl0bGUiLCJzaWRlYmFyUHJvaiIsInNpZGViYXJQcm9qQ2hpbGRyZW4iLCJjaGlsZHJlbiIsInJlbW92ZUNoaWxkIiwicmVtb3ZlUHJvamVjdEZyb21TaWRlYmFyIiwicmVtb3ZlUHJvakFyciIsImNsZWFyTWFpbiIsImluZGV4IiwicHJvakFyciIsIm1haW5TZWMiLCJhZGRQcm9qZWN0VG9TaWRlYmFyIiwicHJvalNpZGUiLCJwcm9qVGl0bGUiLCJkaXNwbGF5UHJvamVjdEluTWFpbiIsInByb2plY3QiLCJwcm9qRGl2IiwidGFza1NlY1VMIiwicHJvakNoZWNrYm94IiwicHJvak5hbWVTcGFuIiwibWFpbk1vZFByb2pUaXRsZSIsInNsaWNlIiwiYnV0dG9uQ29udCIsImFkZERpdiIsImVkaXREaXYiLCJyZW1vdmVEaXYiLCJhZGRJY29uIiwiZWRpdEljb24iLCJyZW1JY29uIiwidGFza0FyciIsImNoZWNrRm9yVGFza3MiLCJmaXJzdENoaWxkIiwiYyIsIm1lbnVDb250YWluZXIiLCJtYWluTG9nb0NvbnQiLCJjbG9zZUNvbnRhaW5lciIsImNyZWF0ZVByb2pDb250IiwibWVudUljb24iLCJtYWluTG9nb0ltZyIsImNsb3NlSWNvbiIsImNyZWF0ZVByb2pJY29uIiwic2lkZUJhciIsInRhZ05hbWUiLCJtZW51RXZlbnRMaXN0ZW4iLCJjbG9zZUJ1dHRvbiIsInN1Ym1pdEJ1dHRvbiIsInByb2plY3RQYXJhbSIsInRpdGxlSW5wdXQiLCJkZXNjSW5wdXQiLCJwcm9qZWN0TWFkZSIsImV4dHJhY3REYXRhRm9yUHJvamVjdCIsInJlcGxhY2VUaXRsZSIsImVkaXRQcm9qZWN0SW5BcnIiLCJlZGl0UHJvamVjdEluU2lkZWJhciIsInByb2plY3RPdmVybGF5U3R1ZmYiLCJkZWZQcm9qIl0sInNvdXJjZVJvb3QiOiIifQ==